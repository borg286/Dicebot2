"use strict";class EncounterBuilder{constructor(){this.stateInit=!1,this._cache=null,this._lastPlayerCount=null,this._advanced=!1,this._cachedTitle=null,this._savedEncounters=null,this._savedName=null,this._lastClickedSave=null,this._selectedSavedEncounter=null,this.doSaveStateDebounced=MiscUtil.debounce(this.doSaveState,50)}initUi(){$(`#btn-encounterbuild`).click(()=>History.setSubhash(EncounterBuilder.HASH_KEY,!0)),$(`#btn-encounterstatblock`).click(()=>History.setSubhash(EncounterBuilder.HASH_KEY,null)),this._initRandomHandlers(),this._initAdjustHandlers(),$(`.ecgen__add_players`).click(()=>{this._advanced?this.addAdvancedPlayerRow(!1):this.addPlayerRow(!1)});const a=$(`.ecgen__players_advanced`).change(()=>{const b=this.getParty();if(this._advanced=!!a.prop("checked"),this._advanced){let a=!0;b.forEach(b=>{[...Array(b.count)].forEach(()=>{this.addAdvancedPlayerRow(a,!1,"",b.level),a=!1})}),$(`.ecgen__player_group`).remove(),this.updateDifficulty()}else{let a=!0;b.forEach(b=>{this.addPlayerRow(a,!1,b.count,b.level),a=!1}),$(`.ecgen__player_advanced`).remove(),this.updateDifficulty()}this.updateUiIsAdvanced(this._advanced)}),b=$(`.ecgen__sv_url`).click(async()=>{const a=UrlUtil.packSubHash(EncounterUtil.SUB_HASH_PREFIX,[JSON.stringify(this.getSaveableState())],{isEncodeBoth:!0}),c=[location.href,a];await MiscUtil.pCopyTextToClipboard(c.join(HASH_PART_SEP)),JqueryUtil.showCopiedEffect(b)});$(`.ecgen__sv_file`).click(()=>DataUtil.userDownload(`encounter`,this.getSaveableState())),$(`.ecgen__ld_file`).click(async()=>{const a=await DataUtil.pUserUpload();a.items&&a.sources&&(a.l={items:a.items,sources:a.sources}),this.pDoLoadState(a)}),$(`.ecgen__reset`).click(()=>confirm("Are you sure?")&&encounterBuilder.pReset());const c=$(`.ecgen__sv_text`).click(()=>{let a=0;const b=ListUtil.sublist.items.map(a=>a.values()).sort((c,a)=>SortUtil.ascSortLower(c.name,a.name)).map(b=>(a+=Parser.crToXpNumber(b.cr)*b.count,`${b.count}Ã— ${b.name}`)).join(", ");MiscUtil.pCopyTextToClipboard(`${b} (${a.toLocaleString()} XP)`),JqueryUtil.showCopiedEffect(c)});$(".ecgen__ld-browser").click(()=>encounterBuilder.doToggleBrowserUi(!0)),$(".ecgen__sv-cancel").click(()=>encounterBuilder.doToggleBrowserUi(!1)),$(".ecgen__sv-new-save-name").keydown(a=>{13===a.which&&this.handleSaveClick(!0)}),window.addEventListener("popstate",()=>this.doToggleBrowserUi(!1))}_initRandomHandlers(){JqueryUtil.bindDropdownButton($(`#ecgen_dropdown_rng`));const a=$(`.ecgen_rng`).click(b=>{b.preventDefault(),this.pDoGenerateEncounter(a.data("mode"))});$(`.ecgen_rng_easy`).click(b=>{b.preventDefault(),this.pDoGenerateEncounter("easy"),a.data("mode","easy").text("Random Easy").attr("title","Randomly generate an Easy encounter")}),$(`.ecgen_rng_medium`).click(b=>{b.preventDefault(),this.pDoGenerateEncounter("medium"),a.data("mode","medium").text("Random Medium").attr("title","Randomly generate a Medium encounter")}),$(`.ecgen_rng_hard`).click(b=>{b.preventDefault(),this.pDoGenerateEncounter("hard"),a.data("mode","hard").text("Random Hard").attr("title","Randomly generate a Hard encounter")}),$(`.ecgen_rng_deadly`).click(b=>{b.preventDefault(),this.pDoGenerateEncounter("deadly"),a.data("mode","deadly").text("Random Deadly").attr("title","Randomly generate a Deadly encounter")})}_initAdjustHandlers(){JqueryUtil.bindDropdownButton($(`#ecgen_dropdown_adj`));const a=$(`.ecgen_adj`).click(b=>{b.preventDefault(),this.pDoAdjustEncounter(a.data("mode"))});$(`.ecgen_adj_easy`).click(b=>{b.preventDefault(),this.pDoAdjustEncounter("easy"),a.data("mode","easy").text("Adjust to Easy").attr("title","Adjust the current encounter difficulty to Easy")}),$(`.ecgen_adj_medium`).click(b=>{b.preventDefault(),this.pDoAdjustEncounter("medium"),a.data("mode","medium").text("Adjust to Medium").attr("title","Adjust the current encounter difficulty to Medium")}),$(`.ecgen_adj_hard`).click(b=>{b.preventDefault(),this.pDoAdjustEncounter("hard"),a.data("mode","hard").text("Adjust to Hard").attr("title","Adjust the current encounter difficulty to Hard")}),$(`.ecgen_adj_deadly`).click(b=>{b.preventDefault(),this.pDoAdjustEncounter("deadly"),a.data("mode","deadly").text("Adjust to Deadly").attr("title","Adjust the current encounter difficulty to Deadly")})}updateUiIsAdvanced(){$(`.ecgen__players_advanced`).prop("checked",this._advanced),$(`.ecgen__player_advanced_extra_head `).remove(),$(`.ecgen__player_advanced_extra_foot`).remove(),this._advanced?($(`.ecgen__add_players`).html(`<span class="glyphicon glyphicon-plus"></span> Add Another Player`),$(`.ecgen__group_lhs`).addClass(`ecgen__group_lhs--advanced`),$(`.ecgen__advanced_help`).show()):($(`.ecgen__add_players`).html(`<span class="glyphicon glyphicon-plus"></span> Add Another Level`),$(`.ecgen__group_lhs`).removeClass(`ecgen__group_lhs--advanced`),$(`.ecgen__advanced_help`).hide())}async initState(){EncounterUtil.pGetSavedState().then(async a=>{a?await this.pDoLoadState(a.data,"local"===a.type):this.addInitialPlayerRows(),this.stateInit=!0}),await this._initSavedEncounters()}addInitialPlayerRows(a){this._advanced?this.addAdvancedPlayerRow(a):this.addPlayerRow(a,!0,ECGEN_BASE_PLAYERS)}async pReset(a=!0,b){b||ListUtil.pDoSublistRemoveAll(),this.removeAllPlayerRows(),a&&this.addInitialPlayerRows()}async pDoLoadState(a,b){if(await this.pReset(!1,b),!!a)try{a.a?(this._advanced=!0,this.updateUiIsAdvanced(),a.d&&a.d.length?a.d.forEach((a,b)=>this.addAdvancedPlayerRow(!b,!1,a.n,a.l,a.x)):this.addInitialPlayerRows(!1),a.c&&a.c.length&&a.c.forEach(a=>{this.addAdvancedColumnHeader(a),this.addAdvancedColumnFooter()})):a.p&&a.p.length?a.p.forEach(({count:a,level:b},c)=>this.addPlayerRow(!c,!1,a,b)):this.addInitialPlayerRows(!1),a.l&&!b&&ListUtil.doJsonLoad(a.l,!1,sublistFuncPreload),a.name&&(this._savedName=a.name),this.updateDifficulty()}catch(a){JqueryUtil.doToast({content:`Could not load encounter! Was the file valid?`,type:"danger"}),this.pReset()}}getSaveableState(){const a={p:this.getParty(),l:ListUtil.getExportableSublist(),a:this._advanced};return null!==this._savedName&&(a.name=this._savedName),this._advanced&&(a.c=$(`.ecgen__players_head_advanced`).find(`.ecgen__player_advanced_extra_head`).map((a,b)=>$(b).val()).get(),a.d=$(`.ecgen__player_advanced`).map((b,c)=>{const d=$(c),e=d.find(`.ecgen__player_advanced_extra`).map((a,b)=>$(b).val()).get();for(;e.length<a.c.length;)e.push("");return{n:d.find(`.ecgen__player_advanced__name`).val(),l:+d.find(`.ecgen__player_advanced__level`).val(),x:e.slice(0,a.c.length)}}).get()),a}doSaveState(){this.stateInit&&EncounterUtil.pDoSaveState(this.getSaveableState())}generateCache(){null==this._cache&&(this._cache=(()=>{const a={};return list.visibleItems.map(a=>monsters[+a.elm.getAttribute("filterid")]).filter(a=>!a.isNpc).forEach(b=>{const c=Parser.crToXpNumber(b.cr);c&&(a[c]=a[c]||[]).push(b)}),a})())}resetCache(){this._cache=null}async pDoAdjustEncounter(a){var b=Math.ceil,c=Math.floor;let d=EncounterBuilderUtils.getSublistedEncounter();if(!d.length)return JqueryUtil.doToast({content:`The current encounter contained no creatures! Please add some first.`,type:"warning"});d.forEach(a=>a.count=1);const e=this.getPartyXpThresholds();let f=EncounterBuilderUtils.calculateEncounterXp(d,e.count);const g=EncounterBuilder.TIERS.indexOf(a);if(!~g)throw new Error(`Unhandled difficulty level: "${a}"`);const[h,i]=[c(.9*e[EncounterBuilder.TIERS[g]]),b(1.1*(e[EncounterBuilder.TIERS[g+1]]-1))];if(f.adjustedXp>i)JqueryUtil.doToast({content:`Could not adjust the current encounter to ${a.uppercaseFirst()}, try removing some creatures!`,type:"danger"});else{const a=EncounterBuilderUtils.getCrCutoff(d),g=[...Array(d.length)].map((a,b)=>b),j=()=>{if(!g.length)return-1;let a=0;for(;!(7<RollerUtil.randomise(12))&&a<g.length-1;)a++;const b=g.splice(a,1)[0],j=[...d];b&&[...Array(b)].forEach(()=>{const a=RollerUtil.randomise(j.length)-1;j.splice(a,1)});let k=999;for(;!(f.adjustedXp>h&&f.adjustedXp<i)&&0<k--;){const a=[...j];if(1<a.length){let b=c(a.length/2);for(b=RollerUtil.randomise(a.length-1,b);0<b--;){const b=RollerUtil.randomise(a.length)-1;a.splice(b,1)}}for(;a.length;){const b=RollerUtil.randomise(a.length)-1,c=a.splice(b,1)[0];c.count++,f=EncounterBuilderUtils.calculateEncounterXp(d,e.count),f.adjustedXp>i&&(c.count--,f=EncounterBuilderUtils.calculateEncounterXp(d,e.count))}}return 0>k?0:1},k=[];let l;for(;!(l=j());)k.push(MiscUtil.copy(d)),d.forEach(a=>a.count=1);-1===l&&k.length&&(d=k.map(a=>({encounter:a,distance:(()=>{const b=EncounterBuilderUtils.calculateEncounterXp(a,e.count);return b>i?b-i:b<h?h-b:0})()})).sort((c,a)=>SortUtil.ascSort(c.distance,a.distance))[0].encounter);const m=d.filter(b=>b.cr<a);if(m.length){let a=i-f.adjustedXp;if(0<a){m.forEach(a=>a._xp=Parser.crToXpNumber(Parser.numberToCr(a.cr)));const g=m.filter(b=>b._xp<a);if(g.length){const a=this.getParty(),g=a.map(a=>a.count).reduce((c,a)=>c+a,0),h=a.map(a=>a.level*a.count).reduce((c,a)=>c+a,0)/g,j=(()=>5>h?[.8,1.3]:11>h?[1,2]:17>h?[1,3]:[1,4])(),[k,l]=[c(j[0]*g),b(j[1]*g)];for(;f.adjustedXp<=i;){const a=d.map(a=>a.count).reduce((c,a)=>c+a,0),b=a<k?90:a>l?40:75,c=RollerUtil.roll(100)<b;if(c)RollerUtil.rollOnArray(m).count++,f=EncounterBuilderUtils.calculateEncounterXp(d,e.count);else break}}}}}this._loadSublist({items:d.map(a=>({h:a.hash,c:`${a.count}`,uid:a.uid||void 0})),sources:ListUtil.getExportableSublist().sources})}async pDoGenerateEncounter(a){const b=this.calculateXp(),c=EncounterBuilder.TIERS.indexOf(a);if(!~c)throw new Error(`Unhandled difficulty level: "${a}"`);const d=b.party[EncounterBuilder.TIERS[c+1]]-1;this.generateCache();const e=(()=>{const a=Object.keys(this._cache).map(a=>+a).sort(SortUtil.ascSort).reverse(),c=Object.entries(Parser.XP_CHART_ALT).map(([a,b])=>({cr:a,xp:b,crNum:Parser.crToNumber(a)})).sort((c,a)=>SortUtil.ascSort(a.crNum,c.crNum)),e=b=>a.filter(a=>a<=b),f=a=>{const e=a.map(a=>({cr:Parser.crToNumber(a.mon.cr.cr||a.mon.cr),count:a.count}));if(!e.length)return d;const f=EncounterBuilderUtils.calculateEncounterXp(e,b.party.count),g=d-f.adjustedXp,h=c.filter(a=>a.xp<=g);if(h.length&&h[0].crNum>=f.meta.crCutoff){const a=Parser.numMonstersToXpMult(f.relevantCount+1,b.party.count);return Math.floor((d-a*f.baseXp)/a)}return g},g=(a,b)=>{const c=a.filter(a=>a.xp===b);if(c.length&&85>RollerUtil.roll(100))RollerUtil.rollOnArray(c).count++;else{const c=RollerUtil.rollOnArray(this._cache[b]),d=a.find(a=>a.mon.source===c.source&&a.mon.name===c.name);d?d.count++:a.push({xp:b,mon:c,count:1})}};let h=0;const i=(a,b,c)=>{const d=b.filter(a=>a.xp===c);if(d.length)return!1;if(1<a.length){const b=RollerUtil.roll(100)<70-13*h;if(b){h++;const b=a.length-1;for(let a=0;a<b;++a)if(0===RollerUtil.roll(2))return a;return b-1}return 0}return!1},j=a=>{if(4<a.length&&1===RollerUtil.roll(2)){const b=RollerUtil.roll(Math.ceil(a.length/3));return a.slice(b)}return a};return(a=>{const b=[],c=j(e(a));let d=a,h=0,k=0;for(;c.length&&!(100<k++);){if(h){h--,c.shift();continue}const a=c[0];if(a>d){c.shift();continue}if(h=i(c,b,a),h){h--,c.shift();continue}g(b,a),d=f(b)}return b})(d)})();if(e){const a={items:[]},b=new Set;e.forEach(c=>{a.items.push({h:UrlUtil.autoEncodeHash(c.mon),c:c.count+""}),b.add(c.mon.source)}),a.sources=[...b],this._loadSublist(a)}else await ListUtil.pDoSublistRemoveAll(),this.updateDifficulty()}_loadSublist(a){ListUtil.doJsonLoad(a,!1,(a,b)=>{sublistFuncPreload(a,()=>{b(),this.updateDifficulty()})})}addAdvancedPlayerRow(a=!0,b=!0,c,d,e){$(`.ecgen__wrp_add_players`).before(EncounterBuilder.getAdvancedPlayerRow(a,c,d,e)),b&&this.updateDifficulty()}addPlayerRow(a=!0,b=!0,c,d){$(`.ecgen__wrp_add_players`).before(EncounterBuilder.getPlayerRow(a,c,d)),b&&this.updateDifficulty()}removeAllPlayerRows(){$(`.ecgen__player_group`).remove(),$(`.ecgen__player_advanced`).remove()}isActive(){return"true"===History.getSubHash(EncounterBuilder.HASH_KEY)}show(){this._cachedTitle=this._cachedTitle||document.title,document.title="Encounter Builder - 5etools",$(`body`).addClass("ecgen_active"),this.updateDifficulty()}hide(){this._cachedTitle&&(document.title=this._cachedTitle,this._cachedTitle=null),$(`body`).removeClass("ecgen_active")}handleClick(a,b,c,d){const e=d?{uid:$(d).closest(`li.row`).find(`.uid`).text()}:void 0;c?ListUtil.pDoSublistAdd(b,!0,a.shiftKey?5:1,e):ListUtil.pDoSublistSubtract(b,a.shiftKey?5:1,e)}handleShuffleClick(a,b){const c=monsters[b],d=Parser.crToXpNumber(c.cr);if(!d)return;const e=ListUtil.getExportableSublist(),f=UrlUtil.autoEncodeHash(c),g=e.items.find(a=>a.h===f);this.generateCache();const h=this._cache[d];if(1!==h.length){let a=c,b=f;for(;b===f;)a=RollerUtil.rollOnArray(h),b=UrlUtil.autoEncodeHash(a);g.h=b,e.sources.includes(a.source)||e.sources.push(a.source);outer:for(let a=0;a<e.items.length;++a){const b=e.items[a];for(let c=a-1;0<=c;--c){const d=e.items[c];if(b.h===d.h){d.c=+d.c+ +b.c+"",e.items.splice(a,1);continue outer}}}this._loadSublist(e)}}handleSubhash(){"true"===History.getSubHash(EncounterBuilder.HASH_KEY)?this.show():this.hide()}removeAdvancedPlayerRow(a){const b=$(a);b.closest(`.ecgen__player_advanced`).remove(),this.updateDifficulty()}removePlayerRow(a){const b=$(a);b.closest(`.ecgen__player_group`).remove(),this.updateDifficulty()}updateDifficulty(){var a=Math.floor;const b=this.calculateXp(),c=$(`.ecgen__easy`).removeClass("bold").text(`Easy: ${b.party.easy.toLocaleString()} XP`),d=$(`.ecgen__medium`).removeClass("bold").text(`Medium: ${b.party.medium.toLocaleString()} XP`),e=$(`.ecgen__hard`).removeClass("bold").text(`Hard: ${b.party.hard.toLocaleString()} XP`),f=$(`.ecgen__deadly`).removeClass("bold").text(`Deadly: ${b.party.deadly.toLocaleString()} XP`),g=$(`.ecgen__absurd`).removeClass("bold").text(`Absurd: ${b.party.absurd.toLocaleString()} XP`);$(`.ecgen__daily_budget`).removeClass("bold").text(`Daily Budget: ${b.party.daily.toLocaleString()} XP`);let h="Trivial";if(b.encounter.adjustedXp>=b.party.absurd?(h="Absurd",g.addClass("bold")):b.encounter.adjustedXp>=b.party.deadly?(h="Deadly",f.addClass("bold")):b.encounter.adjustedXp>=b.party.hard?(h="Hard",e.addClass("bold")):b.encounter.adjustedXp>=b.party.medium?(h="Medium",d.addClass("bold")):b.encounter.adjustedXp>=b.party.easy&&(h="Easy",c.addClass("bold")),b.encounter.relevantCount){$(`.ecgen__req_creatures`).show(),$(`.ecgen__rating`).text(`Difficulty: ${h}`),$(`.ecgen__raw_total`).text(`Total XP: ${b.encounter.baseXp.toLocaleString()}`),$(`.ecgen__raw_per_player`).text(`(${a(b.encounter.baseXp/b.party.count).toLocaleString()} per player)`);const c=Renderer.hover.bindOnMouseHoverEntry({entries:[`{@b Adjusted by a ${b.encounter.meta.playerAdjustedXpMult}Ã— multiplier, based on a minimum challenge rating threshold of approximately ${`${b.encounter.meta.crCutoff.toFixed(2)}`.replace(/[,.]?0+$/,"")}*&dagger;, and a party size of ${b.encounter.meta.playerCount} players.}`,`{@note * Calculated as half of the maximum challenge rating, unless the highest challenge rating is two or less, in which case there is no threshold.}`,`<hr>`,{type:"quote",entries:[`&dagger; [...] don't count any monsters whose challenge rating is significantly below the average challenge rating of the other monsters in the group [...]`],by:"{@book Dungeon Master's Guide, page 82|DMG|3|4 Modify Total XP for Multiple Monsters}"}]},!0);$(`.ecgen__adjusted_total_info`).off("mouseover").on("mouseover",function(a){c(a,this)}),$(`.ecgen__adjusted_total`).text(`Adjusted XP: ${b.encounter.adjustedXp.toLocaleString()}`),$(`.ecgen__adjusted_per_player`).text(`(${a(b.encounter.adjustedXp/b.party.count).toLocaleString()} per player)`)}else $(`.ecgen__req_creatures`).hide();this.doSaveState()}getParty(){if(this._advanced){const a=$(`.ecgen__player_advanced`),b={};return a.each((a,c)=>{const d=$(c).find(`.ecgen__player_advanced__level`).val();b[d]=(b[d]||0)+1}),Object.entries(b).map(([a,b])=>({level:a,count:b}))}return $(`.ecgen__player_group`).map((a,b)=>{const c=$(b);return{count:+c.find(`.ecgen__player_group__count`).val(),level:+c.find(`.ecgen__player_group__level`).val()}}).get()}get lastPlayerCount(){return this._lastPlayerCount}getPartyXpThresholds(){const a=this.getParty();a.forEach(a=>{a.easy=LEVEL_TO_XP_EASY[a.level]*a.count,a.medium=LEVEL_TO_XP_MEDIUM[a.level]*a.count,a.hard=LEVEL_TO_XP_HARD[a.level]*a.count,a.deadly=LEVEL_TO_XP_DEADLY[a.level]*a.count,a.daily=LEVEL_TO_XP_DAILY[a.level]*a.count});const b=a.reduce((c,a)=>(Object.keys(c).forEach(b=>c[b]+=a[b]),c),{count:0,level:0,easy:0,medium:0,hard:0,deadly:0,daily:0});return b.absurd=b.deadly+(b.deadly-b.hard),this._lastPlayerCount=b.count,b}calculateXp(){const a=this.getPartyXpThresholds(),b=EncounterBuilderUtils.calculateListEncounterXp(a.count);return{party:a,encounter:b}}static async doStatblockMouseOver(a,b,c,d){const e=monsters[c];if(null!=d){const c=await ScaleCreature.scale(e,d);Renderer.hover.mouseOverPreloaded(a,b,c,UrlUtil.PG_BESTIARY,e.source,UrlUtil.autoEncodeHash(e))}else Renderer.hover.mouseOver(a,b,UrlUtil.PG_BESTIARY,e.source,UrlUtil.autoEncodeHash(e))}static getTokenMouseOver(a){return Renderer.hover.createOnMouseHoverEntry({name:`Token \u2014 ${a.name}`,type:"image",href:{type:"external",url:Renderer.monster.getTokenUrl(a)}},!0)}static async doImageMouseOver(a,b,c){const d=monsters[c],e=()=>{const c={type:"entries",entries:[HTML_NO_IMAGES],data:{hoverTitle:`Image \u2014 ${d.name}`}};Renderer.hover.doHover(a,b,c)},f=c=>{const f=Renderer.monster.getFluff(d,meta,c);if(f&&f.images&&f.images.length){const c={type:"image",href:f.images[0].href,data:{hoverTitle:`Image \u2014 ${d.name}`}};Renderer.hover.doHover(a,b,c)}else return e()};if(!(ixFluff[d.source]||d.fluff))return e();else if(d.fluff)return f();else{const a=await DataUtil.loadJSON(`${JSON_DIR}${ixFluff[d.source]}`);return f(a)}}doCrChange(a,b,c){const d=$(a),e=monsters[b],f=e.cr.cr||e.cr,g=Parser.crToNumber(f),h=d.val();if(Parser.isValidCr(h)){const a=Parser.crToNumber(h);if(a===c)return;const b=ListUtil.getExportableSublist(),d=UrlUtil.autoEncodeHash(e),f=null==c||g===c?null:getUid(e.name,e.source,c),i=b.items.findIndex(a=>null==c||c===g?null==a.uid&&a.h===d:a.uid===f);if(!~i)throw new Error(`Could not find previously sublisted item!`);const j=g===a?null:getUid(e.name,e.source,a),k=b.items.find(b=>a===g?null==b.uid&&b.h===d:b.uid===j);if(k){const a=b.items[i];k.c=`${+(k.c||1)+ +(a.c||1)}`,b.items.splice(i,1)}else a===g?delete b.items[i].uid:b.items[i].uid=getUid(e.name,e.source,a);this._loadSublist(b)}else JqueryUtil.doToast({content:`"${d.val()}" is not a valid Challenge Rating! Please enter a valid CR (0-30). For fractions, "1/X" should be used.`,type:"danger"}),d.val(Parser.numberToCr(c||f))}addAdvancedColumnHeader(a){$(`.ecgen__advanced_add_col`).before(EncounterBuilder.getAdvancedPlayerDetailHeader(a))}addAdvancedColumnFooter(){$(`.ecgen__wrp_add_players`).append(`
			<div class="ecgen__player_advanced_narrow ecgen__player_advanced_extra_foot mr-1">
				<button class="btn btn-xs btn-danger ecgen__advanced_remove_col" onclick="encounterBuilder.removeAdvancedColumn(this)" title="Remove Column"><span class="glyphicon-trash glyphicon"/></button>
			</div>
		`)}addAdvancedColumn(){this.addAdvancedColumnHeader(),$(`.ecgen__player_advanced`).each((a,b)=>{$(b).find(`input`).last().after(EncounterBuilder.getAdvancedPlayerDetailColumn())}),this.addAdvancedColumnFooter(),this.doSaveStateDebounced()}removeAdvancedColumn(a){const b=$(a),c=$(`.ecgen__wrp_add_players`).find(`.ecgen__player_advanced_extra_foot`).index(b.parent());b.parent().remove(),$(`.ecgen__player_advanced`).each((a,b)=>{$($(b).find(`.ecgen__player_advanced_extra`)[c]).remove()}),$($(`.ecgen__players_head_advanced .ecgen__player_advanced_extra_head`)[c]).remove()}static getAdvancedPlayerDetailHeader(a){return`
			<input class="ecgen__player_advanced_narrow ecgen__player_advanced_extra_head form-control form-control--minimal input-xs text-center mr-1" value="${(a||"").escapeQuotes()}" onchange="encounterBuilder.doSaveStateDebounced()">
		`}static getAdvancedPlayerDetailColumn(a){return`
			<input class="ecgen__player_advanced_narrow ecgen__player_advanced_extra form-control form-control--minimal input-xs text-center mr-1" value="${(a||"").escapeQuotes()}" onchange="encounterBuilder.doSaveStateDebounced()">
		`}static getAdvancedPlayerRow(a,b,c,d){return d=d||[...Array($(`.ecgen__player_advanced_extra_head`).length)].map(()=>""),`
			<div class="row mb-2 ecgen__player_advanced">
				<div class="col-12 flex ecgen__player_advanced_flex">
					<input class="ecgen__player_advanced__name form-control form-control--minimal input-xs mr-1" value="${(b||"").escapeQuotes()}" onchange="encounterBuilder.doSaveStateDebounced()">
					<input value="${c||1}" min="1" max="20" type="number" class="ecgen__player_advanced__level ecgen__player_advanced_narrow form-control form-control--minimal input-xs text-right mr-1" onchange="encounterBuilder.updateDifficulty()">
					${d.map(a=>EncounterBuilder.getAdvancedPlayerDetailColumn(a)).join("")}
					${a?`<div class="ecgen__del_players_filler"/>`:`
					<button class="btn btn-danger btn-xs ecgen__del_players" onclick="encounterBuilder.removeAdvancedPlayerRow(this)" title="Remove Player">
						<span class="glyphicon glyphicon-trash"></span>
					</button>
					`}
				</div>
			</div>
		`}static getPlayerRow(a,b,c){return b=+b||1,c=+c||1,`
			<div class="row mb-2 ecgen__player_group">
				<div class="col-2">
					<select class="ecgen__player_group__count" onchange="encounterBuilder.updateDifficulty()">
					${[...Array(12)].map((a,c)=>`<option ${b===c+1?"selected":""}>${c+1}</option>`).join("")}
					</select>
				</div>
				<div class="col-2">
					<select class="ecgen__player_group__level" onchange="encounterBuilder.updateDifficulty()" >
						${[...Array(20)].map((a,b)=>`<option ${c===b+1?"selected":""}>${b+1}</option>`).join("")}
					</select>
				</div>
				${a?"":`
				<div class="col-2 flex" style="margin-left: -20px; align-items: center; height: 20px;">
					<button class="btn btn-danger btn-xs ecgen__del_players" onclick="encounterBuilder.removePlayerRow(this)" title="Remove Player Group">
						<span class="glyphicon glyphicon-trash"></span>
					</button>
				</div>
				`}
			</div>
		`}static getButtons(a,b){return`
			<span class="ecgen__visible ${b?"col-1-5":"col-1"} no-wrap pl-0" onclick="event.preventDefault()">
				<button title="Add (SHIFT for 5)" class="btn btn-success btn-xs ecgen__btn_list" onclick="encounterBuilder.handleClick(event, ${a}, 1${b?`, this`:""})">
					<span class="glyphicon glyphicon-plus"></span>
				</button>
				<button title="Subtract (SHIFT for 5)" class="btn btn-danger btn-xs ecgen__btn_list" onclick="encounterBuilder.handleClick(event, ${a}, 0${b?`, this`:""})">
					<span class="glyphicon glyphicon-minus"></span>
				</button>
				${b?`
				<button title="Randomize Monster" class="btn btn-default btn-xs ecgen__btn_list" onclick="encounterBuilder.handleShuffleClick(event, ${a}, this)">
					<span class="glyphicon glyphicon-random" style="right: 1px"></span>
				</button>
				`:""}
			</span>
		`}async _initSavedEncounters(){this._savedEncounters=await EncounterUtil.pGetAllSaves()}pSetSavedEncounters(){return StorageUtil.pSet(EncounterUtil.SAVED_ENCOUNTER_SAVE_LOCATION,this._savedEncounters)}doToggleBrowserUi(a){$("#loadsaves").toggle(a),$("#contentwrapper").toggle(!a),a&&this.renderBrowser()}setBrowserButtonsState(a=!1,b=!0){a?($(".ecgen__sv-save").prop("disabled",b).text("Update Save"),$(".ecgen__sv-load").prop("disabled",b).text("Reload")):($(".ecgen__sv-save").prop("disabled",b).text("Save"),$(".ecgen__sv-load").prop("disabled",b).text("Load"))}renderBrowser(){const a=Object.keys(this._savedEncounters),b=!!a.length,c=$("#listofsaves").empty();a.length?a.forEach(a=>{const b=$(`<button class="btn btn-danger btn-xs ecgen__btn_list"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>this.handleDeleteClick(a)),d=$$`<li class="${a===this._savedName?"list-multi-selected":""}">
					<div class="row">
						<span class="col-4 name">${a}</span>
						<span class="col-7-4"></span>
						<span class="no-wrap col-0-6" onclick="event.preventDefault()">${b}</span>
					</div>
				</li>`.click(()=>this._handleSavedClick(d,a)).appendTo(c)}):c.append(`<div class="px-2" style="font-size: 14px;"><i>No saved encounters found.</i></div>`),this.setBrowserButtonsState(b,!b)}_handleSavedClick(a,b){this._selectedSavedEncounter=this._savedEncounters[b],this._lastClickedSave=b,$("#listofsaves").children("li").removeClass("list-multi-selected"),a.addClass("list-multi-selected"),this._savedName===this._lastClickedSave?this.setBrowserButtonsState(!0,!1):this.setBrowserButtonsState(!1,!1)}async handleSaveClick(a){const b=(()=>{if(a){const a=$(".ecgen__sv-new-save-name"),c=a.val().trim();return c?null==this._savedEncounters[c]||confirm(`Are you sure you want to overwrite the saved encounter "${b}"?`)?(a.val(""),c):null:(JqueryUtil.doToast({content:"Please enter an encounter name!",type:"warning"}),null)}return this._savedName===this._lastClickedSave?this._savedName:confirm(`Are you sure you want to overwrite the saved encounter "${this._lastClickedSave}"?`)?this._savedName:void 0})();b&&(this._savedName=b,this._savedEncounters[b]=this.getSaveableState(),this.pSetSavedEncounters(),this.doSaveState(),this.renderBrowser())}async handleLoadClick(){await this.pDoLoadState(this._selectedSavedEncounter),this.doToggleBrowserUi(!1)}handleDeleteClick(a){delete this._savedEncounters[a],a===this._savedName&&(this._savedName=null),this.pSetSavedEncounters(),this.renderBrowser()}handleResetEncounterSavesClick(){confirm("Are you sure?")&&(this._savedEncounters={},this.pSetSavedEncounters(),this._lastClickedSave=null,this.renderBrowser())}}EncounterBuilder.HASH_KEY="encounterbuilder",EncounterBuilder.TIERS=["easy","medium","hard","deadly","absurd"];