"use strict";const JSON_SRC_INDEX="index.json";function multisourceLoad(a,b,c,d,e){return new Promise(f=>{DataUtil.loadJSON(a+JSON_SRC_INDEX).then(f=>_onIndexLoad(f,a,b,c,d,e)).then(f)})}let loadedSources;function _onIndexLoad(a,b,c,d,e,f){return new Promise(async g=>{loadedSources={},Object.keys(a).forEach(c=>loadedSources[c]={url:b+a[c],loaded:!1});const h=Object.keys(a),i=h.filter(a=>defaultSourceSelFn(a)),j=History.getHashSource(),k=j?Object.keys(a).find(a=>a.toLowerCase()===j.toLowerCase()):null,l=[...new Set(((await FilterBox.pGetStoredActiveSources())||[]).concat((await ListUtil.pGetSelectedSources())||[]).concat(k?[k]:[]))],m=[];if(l&&l.filter(b=>a[b]).filter(a=>-1===$.inArray(a,m)).forEach(a=>m.push(a)),0===m.length&&i.filter(b=>a[b]).forEach(a=>m.push(a)),window.location.hash.length){const[a,...b]=History._getHashParts(),c=a.split(HASH_LIST_SEP)[1],d={};h.forEach(a=>d[UrlUtil.encodeForHash(a)]=a);const e=d[c];e&&-1===$.inArray(e,m)&&m.push(e)}const n=m.map(c=>({src:c,url:b+a[c]})),o=d(loadedSources);0<n.length?DataUtil.multiLoadJSON(n,a=>{o.then(()=>{loadedSources[a.src].loaded=!0})},a=>{o.then(()=>{let b=[];a.forEach(a=>b=b.concat(a[c])),e(b);const d=()=>new Promise(a=>{RollerUtil.addListRollButton(),ListUtil.addListShowHide(),History.init(!0),a()}),h=f?f().then(d):d;h.then(g)})}):o.then(()=>{g()})})}function loadSource(a,b){return function(c,d){const e=loadedSources[c]||loadedSources[Object.keys(loadedSources).find(a=>a.toLowerCase()===c)];e.loaded||"yes"!==d||DataUtil.loadJSON(e.url).then(function(c){b(c[a]),e.loaded=!0})}}function onFilterChangeMulti(a){FilterBox.selectFirstVisible(a)}