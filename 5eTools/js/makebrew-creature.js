"use strict";class CreatureBuilder extends Builder{constructor(){super(),this._bestiaryMetaRaw=null,this._bestiaryFluffIndex=null,this._bestiaryTypeTags=null,this._bestiaryMetaCache=null,this._legendaryGroups=null,this._sourcesCache=[],this._$selSource=null,this._cbCache=null,this._state=this._getInitialState(),this._stateProxy=null,this._stateHooks=null,this._meta=CreatureBuilder._getInitialMetaState(),this._metaProxy=null,this._metaHooks=null,this._doCreateProxies(),this._$btnSave=null,TabUiUtil.decorate(this),this._$eles={},this._renderOutputDebounced=MiscUtil.debounce(()=>this._renderOutput(),50),this._$sideMenuStageSaved=null,this._$sideMenuWrpList=null,this._generateAttackCache=null}get ixBrew(){return this._meta.ixBrew}set ixBrew(e){this._metaProxy.ixBrew=e}async pInit(){const[e,t,a,n]=await Promise.all([DataUtil.loadJSON("data/bestiary/meta.json"),DataUtil.loadJSON("data/bestiary/fluff-index.json"),DataUtil.loadJSON("data/makebrew-creature.json"),DataUtil.loadJSON("data/bestiary/index.json")]);this._bestiaryFluffIndex=t,this._bestiaryMetaRaw=e,this._legendaryGroups=[...this._bestiaryMetaRaw.legendaryGroup,...(BrewUtil.homebrew.legendaryGroup||[])],this._bestiaryMetaCache={},this._legendaryGroups.forEach(e=>(this._bestiaryMetaCache[e.source]=this._bestiaryMetaCache[e.source]||{})[e.name]=e),this._jsonCreature=await a,this._indexedTraits=elasticlunr(function(){this.addField("n"),this.setRef("id")}),SearchUtil.removeStemmer(this._indexedTraits),this._jsonCreature.trait.forEach((e,t)=>this._indexedTraits.addDoc({n:e.name,id:t}));const r=new Set,o=await Promise.all(Object.values(n).map(e=>DataUtil.loadJSON(`data/bestiary/${e}`)));o.forEach(e=>e.monster.forEach(e=>e.type&&e.type.tags?e.type.tags.forEach(e=>r.add(e.tag||e)):"")),this._bestiaryTypeTags=[...r]}renderSideMenu(){this._ui.$wrpSideMenu.empty();const e=$(`<button class="btn btn-xs btn-default">Load Existing Creature</button>`).click(()=>{const e=new SearchWidget({Creature:SearchWidget.CONTENT_INDICES.Creature},async(e,a,n)=>{t.data("close")();const r=MiscUtil.copy((await Renderer.hover.pCacheAndGet(e,a,n)));if(this._bestiaryFluffIndex[r.source]&&!r.fluff){const e=await DataUtil.loadJSON(`data/bestiary/${this._bestiaryFluffIndex[r.source]}`),t=Renderer.monster.getFluff(r,this._bestiaryMetaRaw,e);t&&(r.fluff=t)}if(r.source=this._ui.source,100!==Parser.crToNumber(r.cr)){const e=Parser.CRS.indexOf(r.cr.cr||r.cr),t=await InputUiUtil.pGetUserEnum({values:Parser.CRS,title:"At Challange Rating...",default:e});if(null!=t&&t!==e){const e=await ScaleCreature.scale(r,Parser.crToNumber(Parser.CRS[t]));delete e._displayName,this.setStateFromLoaded({s:e,m:CreatureBuilder._getInitialMetaState()})}else this.setStateFromLoaded({s:r,m:CreatureBuilder._getInitialMetaState()})}else this.setStateFromLoaded({s:r,m:CreatureBuilder._getInitialMetaState()});this.renderInput(),this.renderOutput()},{defaultCategory:"Creature"}),t=UiUtil.getShow$Modal("Select Creature",()=>e.$wrpSearch.detach());t.append(e.$wrpSearch),e.doFocus()});$$`<div class="sidemenu__row">${e}</div>`.appendTo(this._ui.$wrpSideMenu);const t=$(`<button class="btn btn-default btn-xs mb-2">Download Creatures as JSON</button>`).click(()=>{const e=this._ui._getJsonOutputTemplate();e.monster=(BrewUtil.homebrew.monster||[]).filter(e=>e.source===this._ui.source).map(e=>DataUtil.cleanJson(MiscUtil.copy(e))),DataUtil.userDownload(DataUtil.getCleanFilename(BrewUtil.sourceJsonToFull(this._ui.source)),e)});this._$sideMenuWrpList=$(`<div class="sidemenu__row flex-col">`),this._$sideMenuStageSaved=$$`<div>
		${PageUi.__$getSideMenuDivider().hide()}
		<div class="flex-v-center">${t}</div>
		${this._$sideMenuWrpList}
		</div>`.appendTo(this._ui.$wrpSideMenu),this._doUpdateSidemenu()}_doUpdateSidemenu(){this._$sideMenuWrpList.empty();const e=MiscUtil.copy((BrewUtil.homebrew.monster||[]).filter(e=>e.source===this._ui.source)).sort((e,t)=>SortUtil.ascSort(e.name,t.name));this._$sideMenuStageSaved.toggle(!!e.length),e.forEach(e=>{const t=BrewUtil.getEntryIxByName("monster",e),a=$(`<button class="btn btn-xs btn-default mr-2" title="Edit"><span class="glyphicon glyphicon-pencil"/></button>`).click(()=>{this.getOnNavMessage()&&!confirm("You have unsaved changes. Are you sure?")||(this.setStateFromLoaded({s:MiscUtil.copy(e),m:{...CreatureBuilder._getInitialMetaState(),ixBrew:t}}),this.renderInput(),this.renderOutput(),this._saveTemp())}),n=ContextUtil.getNextGenericMenuId(),r=[{name:"Duplicate",action:async()=>{const t=MiscUtil.copy(e),a=/^(.*?) \((\d+)\)$/.exec(e.name.trim());t.name=a?`${a[1]} (${+a[2]+1})`:`${t.name} (1)`,await BrewUtil.pAddEntry("monster",t),this._doUpdateSidemenu()}},{name:"View JSON",action:t=>{const a=this._ui._getJsonOutputTemplate();a.monster=[PropOrder.getOrdered(DataUtil.cleanJson(MiscUtil.copy(e)),"monster")];const n=Renderer.hover.__initOnMouseHoverEntry({type:"code",name:`${this._stateProxy.name} \u2014 Source Data`,preformatted:JSON.stringify(a,null,"\t")});o.attr("data-hover-active",!1),Renderer.hover.mouseOverHoverTooltip({shiftKey:!0,clientX:t.clientX},o[0],n,!0)}},{name:"Download JSON",action:()=>{const t=this._ui._getJsonOutputTemplate();t.monster=[DataUtil.cleanJson(MiscUtil.copy(e))],DataUtil.userDownload(DataUtil.getCleanFilename(e.name),t)}}];ContextUtil.doInitContextMenu(n,(e,t,a,n)=>{const o=+n.data("ctx-id");r[o].action(e,a)},r.map(e=>e.name));const o=$(`<button class="btn btn-xs btn-default mr-2" title="More Options"><span class="glyphicon glyphicon-option-vertical"/></button>`).click(e=>ContextUtil.handleOpenContextMenu(e,o,n)),i=$(`<button class="btn btn-xs btn-danger" title="Delete"><span class="glyphicon glyphicon-trash"/></button>`).click(async()=>{confirm("Are you sure?")&&(this.ixBrew===t?(this.isEntrySaved=!1,this.ixBrew=null,this._mutSavedButtonText()):this.ixBrew>t&&this.ixBrew--,await BrewUtil.pRemoveEntry("monster",e),this._doUpdateSidemenu())});$$`<div class="mkbru__sidebar-entry flex-v-center split px-2 flex-wrap">
			<span class="py-1">${e.name}</span>
			<div class="py-1">${a}${o}${i}</div>
			</div>`.appendTo(this._$sideMenuWrpList)})}getOnNavMessage(){return!this.isEntrySaved&&~this.ixBrew?"You have unsaved changes! Are you sure you want to leave?":null}_getInitialState(){return{name:"New Creature",size:"M",type:"aberration",source:this._ui?this._ui.source:"",alignment:["N"],ac:[10],hp:{average:4,formula:"1d8"},speed:{walk:30},str:10,dex:10,con:10,int:10,wis:10,cha:10,passive:10,cr:"0"}}static _getInitialMetaState(){return{}}getSaveableState(){return{s:this._state,m:this._meta,_m:{isEntrySaved:this.isEntrySaved}}}setStateFromLoaded(e){var t=Math.floor;if(e&&e.s&&e.m){if(e.s.languages&&!(e.s.languages instanceof Array)&&(e.s.languages=[e.s.languages]),e.s.senses&&!(e.s.senses instanceof Array)&&(e.s.senses=[e.s.senses]),this._state=e.s,this._meta=e.m,this._doCreateProxies(),null!=e.m.ixBrew){const t=(BrewUtil.homebrew.monster||[]).findIndex(t=>t.source===e.s.source&&t.name===e.s.name);~t?t!==e.m.ixBrew&&(e.m.ixBrew=t):e.m.ixBrew=null}if(!e.m.profSave&&(e.m.profSave={},e.s.save)){const t=this._getProfBonus();Object.entries(e.s.save).forEach(([a,n])=>{const r=Parser.getAbilityModNumber(e.s[a])+t;+n===+r&&(e.m.profSave[a]=1)})}if(!e.m.profSkill&&(e.m.profSkill={},e.s.skill)){const t=this._getProfBonus();Object.entries(e.s.skill).forEach(([a,n])=>{const r=Parser.skillToAbilityAbv(a),o=Parser.getAbilityModNumber(e.s[r]);if(+n===+(o+t))return e.m.profSkill[a]=1;+n===+(o+2*t)&&(e.m.profSkill[a]=2)})}if(!e.m.autoCalc){if(e.m.autoCalc={proficiency:!0},e.s.hp.formula&&null!=e.s.hp.average){const a=t(Renderer.dice.parseAverage(e.s.hp.formula));e.m.autoCalc.hpAverageSimple=a===e.s.hp.average,e.m.autoCalc.hpAverageComplex=e.m.autoCalc.hpAverageSimple;const n=CreatureBuilder.__$getHpInput__getFormulaParts(e.s.hp.formula);if(n){const t=Parser.getAbilityModNumber(this._state.con),a=t*n.hdNum;a===(n.mod||0)&&(e.m.autoCalc.hpModifier=!0)}}else e.m.autoCalc.hpAverage=!0,e.m.autoCalc.hpModifier=!0;const a=(e.s.skill&&e.s.skill.perception?+e.s.skill.perception:Parser.getAbilityModNumber(this._state.wis))+10;e.s.passive&&a===e.s.passive&&(e.m.autoCalc.passivePerception=!0)}this.isEntrySaved=e._m&&null!=this.isEntrySaved?!!e._m.isEntrySaved:null!=e.m.ixBrew,this._mutSavedButtonText(),this._saveTemp()}}_saveTemp(){this._isStateDirty=!0,this._ui.doSaveDebounced()}async _pSaveBrew(){if(null!=this.ixBrew)await BrewUtil.pUpdateEntryByIx("monster",this.ixBrew,MiscUtil.copy(this._state)),this.renderSideMenu();else{const e=MiscUtil.copy(this._state);this.ixBrew=await BrewUtil.pAddEntry("monster",e),await Omnisearch.pAddToIndex("monster",e),SearchWidget.addToIndexes("monster",e)}this.isEntrySaved=!0,this._mutSavedButtonText(),this._saveTemp()}_mutSavedButtonText(){this._$btnSave&&this._$btnSave.text(this.isEntrySaved?"Saved":"Save *")}doHandleSourceUpdate(){const e=this._ui.source;if(!this._sourcesCache.includes(e)){this._stateProxy.source=e,this._sourcesCache=MiscUtil.copy(this._ui.allSources);const t=this._$selSource;this._$selSource=this.__$getSourceInput(this._cbCache),t.replaceWith(this._$selSource)}this.renderInput(),this.renderOutput(),this.renderSideMenu(),this._saveTemp()}doHandleSourcesAdd(){(this._$eles.$selVariantSources||[]).map(e=>{const t=e.val();return e.empty().append(`<option value="">(Same as Creature)</option>`),this._ui.allSources.forEach(t=>e.append(`<option value="${t.escapeQuotes()}">${Parser.sourceJsonToFull(t).escapeQuotes()}</option>`)),this._ui.allSources.indexOf(t)?e.val(t):e[0].selectedIndex=0,e}).forEach(e=>e.change())}_doCreateProxies(){this._resetHooks("state"),this._resetHooks("meta"),this._stateProxy=this._getProxy(this._state,"state"),this._metaProxy=this._getProxy(this._state,"meta")}renderInput(){this._validateMeta(),this._renderInputControls(),this._renderInputMain()}_validateMeta(){const e=this._metaProxy||this._meta;e.profSave||(e.profSave={}),e.profSkill||(e.profSkill={}),e.autoCalc||(e.autoCalc={})}_renderInputControls(){const e=this._ui.$wrpInputControls.empty();this._$btnSave=BuilderUi.$getSaveButton().click(async()=>{await this._pSaveBrew(),this._doUpdateSidemenu()}).appendTo(e),BuilderUi.$getResetButton().click(()=>{confirm("Are you sure?")&&(this.setStateFromLoaded({s:this._getInitialState(),m:CreatureBuilder._getInitialMetaState()}),this.renderInput(),this.renderOutput(),this.isEntrySaved=!0,this._mutSavedButtonText(),this._saveTemp())}).appendTo(e)}_renderInputMain(){this._sourcesCache=MiscUtil.copy(this._ui.allSources);const e=this._ui.$wrpInput.empty();this._doCreateProxies();const t=MiscUtil.debounce(()=>{RenderBestiary.updateParsed(this._stateProxy),DiceConvert.cleanHpDice(this._stateProxy),TagAttack.tryTagAttacks(this._stateProxy),TagHit.tryTagHits(this._stateProxy),TagDc.tryTagDcs(this._stateProxy),TagCondition.tryTagConditions(this._stateProxy),TraitActionTag.tryRun(this._stateProxy),LanguageTag.tryRun(this._stateProxy),SenseTag.tryRun(this._stateProxy),SpellcastingTypeTag.tryRun(this._stateProxy),DamageTypeTag.tryRun(this._stateProxy),MiscTag.tryRun(this._stateProxy),this.renderOutput(),this._saveTemp(),this.isEntrySaved=!1,this._mutSavedButtonText()},33);this._cbCache=t,this._resetTabs("input");const a=["Info","Race","Core","Defence","Abilities","Flavor/Misc"].map((e,t)=>this._getTab(t,e,{hasBorder:!0,tabGroup:"input",stateObj:this._metaProxy,cbTabChange:this._saveTemp.bind(this)})),[n,r,o,i,d,p]=a;$$`<div class="flex-v-center full-width no-shrink ui-tab__wrp-tab-heads--border">${a.map(e=>e.$btnTab)}</div>`.appendTo(e),a.forEach(t=>t.$wrpTab.appendTo(e)),BuilderUi.$getStateIptString("Name",t,this._stateProxy,{nullable:!1,callback:()=>this.renderSideMenu()},"name").appendTo(n.$wrpTab),BuilderUi.$getStateIptString("Short Name",t,this._stateProxy,{title:"If not supplied, this will be generated from the creature's full name. Used in Legendary Action header text."},"shortName").appendTo(n.$wrpTab),this._$selSource=this.__$getSourceInput(t).appendTo(n.$wrpTab),BuilderUi.$getStateIptNumber("Page",t,this._stateProxy,{},"page").appendTo(n.$wrpTab),this.__$getAlignmentInput(t).appendTo(n.$wrpTab),this.__$getCrInput(t).appendTo(n.$wrpTab),this.__$getProfBonusInput(t).appendTo(n.$wrpTab),BuilderUi.$getStateIptEnum("Size",t,this._stateProxy,{vals:Parser.SIZE_ABVS,fnDisplay:Parser.sizeAbvToFull,type:"string",nullable:!1},"size").appendTo(r.$wrpTab),this.__$getTypeInput(t).appendTo(r.$wrpTab),this.__$getSpeedInput(t).appendTo(r.$wrpTab),this.__$getSenseInput(t).appendTo(r.$wrpTab),this.__$getLanguageInput(t).appendTo(r.$wrpTab),this.__$getAbilityScoreInput(t).appendTo(o.$wrpTab),this.__$getSaveInput(t).appendTo(o.$wrpTab),this.__$getSkillInput(t).appendTo(o.$wrpTab),this.__$getPassivePerceptionInput(t).appendTo(o.$wrpTab),this.__$getAcInput(t).appendTo(i.$wrpTab),this.__$getHpInput(t).appendTo(i.$wrpTab),this.__$getVulnerableInput(t).appendTo(i.$wrpTab),this.__$getResistInput(t).appendTo(i.$wrpTab),this.__$getImmuneInput(t).appendTo(i.$wrpTab),this.__$getCondImmuneInput(t).appendTo(i.$wrpTab),this.__$getSpellcastingInput(t).appendTo(d.$wrpTab),this.__$getTraitInput(t).appendTo(d.$wrpTab),this.__$getActionInput(t).appendTo(d.$wrpTab),this.__$getReactionInput(t).appendTo(d.$wrpTab),BuilderUi.$getStateIptNumber("Legendary Action Count",t,this._stateProxy,{title:"If specified, this will override the default number (3) of legendary actions available for the creature.",placeholder:"If left blank, defaults to 3."},"legendaryActions").appendTo(d.$wrpTab),BuilderUi.$getStateIptBoolean("Name is Proper Noun",t,this._stateProxy,{title:"If selected, the legendary action intro text for this creature will be formatted as though the creature's name is a proper noun (e.g. 'Tiamat can take...' vs 'The dragon can take...')."},"isNamedCreature").appendTo(d.$wrpTab),BuilderUi.$getStateIptEntries("Legendary Action Intro",t,this._stateProxy,{title:"If specified, this custom legendary action intro text will override the default.",placeholder:"If left blank, defaults to a generic intro."},"legendaryHeader").appendTo(d.$wrpTab),this.__$getLegendaryActionInput(t).appendTo(d.$wrpTab),this.__$getLegendaryGroupInput(t).appendTo(d.$wrpTab),this.__$getVariantInput(t).appendTo(d.$wrpTab),this.__$getTokenInput(t).appendTo(p.$wrpTab),this.__$getFluffInput(t).appendTo(p.$wrpTab),this.__$getEnvironmentInput(t).appendTo(p.$wrpTab),BuilderUi.$getStateIptString("Group",t,this._stateProxy,{title:"The family this creature belongs to, e.g. 'Modrons' in the case of a Duodrone."},"group").appendTo(p.$wrpTab),BuilderUi.$getStateIptString("Sound Clip URL",t,this._stateProxy,{type:"url"},"soundClip").appendTo(p.$wrpTab),BuilderUi.$getStateIptEnum("Dragon Casting Color",t,this._stateProxy,{vals:Object.keys(Parser.DRAGON_COLOR_TO_FULL).sort((e,t)=>SortUtil.ascSort(Parser.dragonColorToFull(e),Parser.dragonColorToFull(t))),fnDisplay:e=>Parser.dragonColorToFull(e).uppercaseFirst(),type:"string"},"dragonCastingColor").appendTo(p.$wrpTab),BuilderUi.$getStateIptBoolean("NPC",t,this._stateProxy,{title:"If selected, this creature will be filtered out from the Bestiary list by default."},"isNpc").appendTo(p.$wrpTab),BuilderUi.$getStateIptBoolean("Familiar",t,this._stateProxy,{title:"If selected, this creature will be included when filtering for 'Familiar' in the Bestiary."},"familiar").appendTo(p.$wrpTab),BuilderUi.$getStateIptStringArray("Search Aliases",t,this._stateProxy,{shortName:"Alias",title:"Alternate names for this creature, e.g. 'Illithid' as an alternative for 'Mind Flayer,' which can be searched in the Bestiary."},"alias").appendTo(p.$wrpTab)}__$getSourceInput(e){return BuilderUi.$getStateIptEnum("Source",e,this._stateProxy,{vals:this._sourcesCache,fnDisplay:Parser.sourceJsonToFull,type:"string",nullable:!1},"source")}__$getTypeInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Type",{isMarked:!0}),n=this._stateProxy.type,r=!!n.swarmSize,o=()=>{if(l.length){const e=l.map(e=>{const t=e.$iptPrefix.val().trim(),a=e.$iptTag.val().trim();return a?t?{tag:a,prefix:t}:a:null}).filter(Boolean);this._stateProxy.type=e.length?{type:p.val(),tags:e}:p.val()}else this._stateProxy.type=p.val();e()},i=()=>{this._stateProxy.type={type:p.val(),swarmSize:f.val()},e()},d=$(`<select class="form-control input-xs mb-2">
			<option value="0">Creature</option>
			<option value="1">Swarm</option>
		</select>`).val(r?"1":"0").change(()=>{switch(d.val()){case"0":{g.show(),_.hide(),o();break}case"1":{g.hide(),_.show(),i();break}}}).appendTo(a),p=$(`<select class="form-control input-xs">${Parser.MON_TYPES.map(e=>`<option value="${e}">${e.uppercaseFirst()}</option>`).join("")}</select>`).change(()=>{switch(d.val()){case"0":o();break;case"1":i();}}).appendTo(a).val(n.type||n),l=[],s=$(`<button class="btn btn-xs btn-default">Add Tag</button>`).click(()=>{const e=this.__$getTypeInput__getTagRow(null,l,o);c.append(e.$wrp)}),u=n.tags?n.tags.map(e=>this.__$getTypeInput__getTagRow(e,l,o)):null,c=$$`<div>${u?u.map(e=>e.$wrp):""}</div>`,g=$$`<div class="mt-2">
		${c}
		<div>${s}</div>
		</div>`.appendTo(a).toggle(!r),f=$(`<select class="form-control input-xs mt-2">${Parser.SIZE_ABVS.map(e=>`<option value="${e}">${Parser.sizeAbvToFull(e)}</option>`).join("")}</select>`).change(()=>{this._stateProxy.type.swarmSize=f.val(),e()}),_=$$`<div>
		${f}
		</div>`.appendTo(a).toggle(r);return r&&f.val(n.swarmSize),t}__$getTypeInput__getTagRow(e,t,a){const n=$(`<input class="form-control input-xs form-control--minimal mr-2" placeholder="Prefix">`).change(()=>{r.removeClass("error-background"),r.val().trim().length||!n.val().trim().length?a():r.addClass("error-background")});e&&e.prefix&&n.val(e.prefix);const r=$(`<input class="form-control input-xs form-control--minimal mr-2" placeholder="Tag (lowercase)">`).change(()=>{r.removeClass("error-background"),a()});e&&r.val(e.tag||e);const o=$(`<button class="btn btn-xs btn-default mr-2">Add Tag...</button>`).click(async()=>{const e=await InputUiUtil.pGetUserString({title:"Enter a Tag",autocomplete:this._bestiaryTypeTags});null!=e&&(r.val(e),a())}),i=$(`<button class="btn btn-xs btn-danger" title="Remove Row"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{t.splice(t.indexOf(p),1),d.empty().remove(),a()}),d=$$`<div class="flex mb-2">${n}${r}${o}${i}</div>`,p={$wrp:d,$iptPrefix:n,$iptTag:r};return t.push(p),p}__$getAlignmentInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Alignment",{isMarked:!0}),n=()=>{const t=r.map(e=>e.getAlignment());this._stateProxy.alignment=t.some(e=>null!=e.special||e.alignment)||1<t.length?t.map(e=>null!=e.special||e.alignment?e:{alignment:e}):t[0],e()},r=[],o=$(`<div/>`).appendTo(a);this._stateProxy.alignment.some(e=>null!=e.special||e.alignment)||!~CreatureBuilder.__$getAlignmentInput__getAlignmentIx(this._stateProxy.alignment)?this._stateProxy.alignment.forEach(e=>CreatureBuilder.__$getAlignmentInput__getAlignmentRow(n,r,e).$wrp.appendTo(o)):CreatureBuilder.__$getAlignmentInput__getAlignmentRow(n,r,this._stateProxy.alignment).$wrp.appendTo(o);const i=$(`<div/>`).appendTo(a);return $(`<button class="btn btn-xs btn-default">Add Alignment</button>`).appendTo(i).click(()=>{CreatureBuilder.__$getAlignmentInput__getAlignmentRow(n,r).$wrp.appendTo(o),n()}),t}static __$getAlignmentInput__getAlignmentRow(e,t,a){var n=Math.min,r=Math.max;const o=a&&a.chance?"1":a&&a.special?"2":"0",i=$(`<select class="form-control input-xs mb-2">
				<option value="0">Basic Alignment</option>
				<option value="1">Chance-Based Alignment</option>
				<option value="2">Special Alignment</option>
			</select>`).val(o).change(()=>{switch(i.val()){case"0":{p.show(),s.hide(),c.hide(),e();break}case"1":{p.show(),s.show(),c.hide(),e();break}case"2":{p.hide(),s.hide(),c.show(),e();break}}}),d=$(`<select class="form-control input-xs mb-2">${CreatureBuilder._ALIGNMENTS.map((e,t)=>e?`<option value="${t}">${Parser.alignmentListToFull(e)}</option>`:`<option disabled>\u2014</option>`).join("")}</select>`).change(()=>e()),p=$$`<div>${d}</div>`.toggle("0"===o||"1"===o);"0"==o&&a&&d.val(CreatureBuilder.__$getAlignmentInput__getAlignmentIx(a.alignment||a)),"1"==o&&a&&d.val(CreatureBuilder.__$getAlignmentInput__getAlignmentIx(a.alignment));const l=$(`<input type="number" class="form-control form-control--minimal input-xs mr-2" min="1" max="100" placeholder="Chance of alignment">`).change(()=>e()),s=$$`<div class="mb-2 flex-v-center">${l}<span>%</span></div>`.toggle("1"==o);"1"==o&&a&&l.val(a.chance);const u=$(`<input class="form-control input-xs form-control--minimal mb-2">`).change(()=>e()),c=$$`<div>${u}</div>`.toggle("2"==o);"2"==o&&a&&u.val(a.special);const g=$(`<button class="btn btn-xs btn-danger mkbru_mon__btn-rm-row mb-2" title="Remove Alignment"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{t.splice(t.indexOf(_),1),f.empty().remove(),e()}),f=$$`<div class="flex-col mkbru_mon__wrp-rows mkbru_mon__wrp-rows--removable">${i}${p}${s}${c}${$$`<div class="text-right">${g}</div>`}</div>`,_={$wrp:f,getAlignment:()=>{switch(i.val()){case"0":return[...CreatureBuilder._ALIGNMENTS[d.val()]];case"1":return{alignment:[...CreatureBuilder._ALIGNMENTS[d.val()]],chance:n(r(0,+l.val()),100)};case"2":{const e=u.val().trim().split(",").map(e=>e.trim()).filter(Boolean);return e.length?e.map(e=>({special:e})):{special:""}}}}};return t.push(_),_}static __$getAlignmentInput__getAlignmentIx(e){return CreatureBuilder._ALIGNMENTS.findIndex(t=>CollectionUtil.setEq(new Set(t),new Set(e)))}__$getAcInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Armor Class",{isMarked:!0}),n=()=>{this._stateProxy.ac=r.map(e=>e.getAc()),e()},r=[],o=$(`<div/>`).appendTo(a);this._stateProxy.ac.forEach(e=>CreatureBuilder.__$getAcInput__getAcRow(e,r,n).$wrp.appendTo(o));const i=$(`<div/>`).appendTo(a);return $(`<button class="btn btn-xs btn-default">Add Armor Class Source</button>`).appendTo(i).click(()=>{CreatureBuilder.__$getAcInput__getAcRow(null,r,n).$wrp.appendTo(o),n()}),t}static __$getAcInput__getAcRow(e,t,a){const n=e&&e.from?"1":"0",r=$(`<select class="form-control input-xs mkbru_mon__ac-split">
				<option value="0">Unarmored</option>
				<option value="1">Armor Class From...</option>
			</select>`).val(n).change(()=>{switch(r.val()){case"0":{u.hide(),a();break}case"1":{u.show(),p.length||CreatureBuilder.__$getAcInput__getFromRow(null,p,a).$wrpFrom.appendTo(l),a();break}}}),o=$(`<input type="number" class="form-control form-control--minimal input-xs mr-2 mkbru_mon__ac-split">`).val(e?e.ac||e:10).change(()=>a()),i=$(`<input class="form-control form-control--minimal input-xs" placeholder="when...">`).change(()=>a());e&&e.condition&&i.val(e.condition);const d=$(`<input type="checkbox" class="mkbru__ipt-cb--plain">`).change(()=>a());e&&e.braces&&d.prop("checked",e.braces);const p=[],l=$(`<div/>`);e&&e.from&&e.from.forEach(e=>CreatureBuilder.__$getAcInput__getFromRow(e,p,a).$wrpFrom.appendTo(l));const s=$(`<button class="btn btn-xs btn-default mb-2">Add Another Feature/Item</button>`).click(()=>{CreatureBuilder.__$getAcInput__getFromRow(null,p,a).$wrpFrom.appendTo(l),a()}),u=$$`<div class="mb-2 flex-col">
		${l}
		${$$`<div>${s}</div>`}
		</div>`.toggle("1"==n),c=$(`<button class="btn btn-xs btn-danger mkbru_mon__btn-rm-row mb-2" title="Remove AC Source"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{t.splice(t.indexOf(f),1),g.empty().remove(),a()}),g=$$`<div class="flex-col mkbru_mon__wrp-rows mkbru_mon__wrp-rows--removable">
			<div class="flex-v-center mb-2">${o}${r}</div>
			${$$`<div>${u}</div>`}
			<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--50">Condition</span>${i}</div>
			<label class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--50">Surround with brackets</span>${d}</label>
			${$$`<div class="text-right">${c}</div>`}
			</div>`,f={$wrp:g,getAc:()=>{const e=+o.val().trim(),t=isNaN(e)?10:e,a=i.val().trim(),n=d.prop("checked"),l=()=>{if(a){const e={ac:t,condition:a};return n&&(e.braces=!0),e}return t};switch(r.val()){case"0":return l();case"1":{const e=p.map(e=>e.getAcFrom()).filter(Boolean);if(e.length){const r={ac:t,from:e};return a&&(r.condition=a),n&&(r.braces=!0),r}return l()}}}};return t.push(f),f}static __$getAcInput__getFromRow(e,t,a){const n=$(`<input class="form-control form-control--minimal input-xs mr-2" placeholder="From...">`).change(()=>a());e&&n.val(e);const r=ContextUtil.getNextGenericMenuId();ContextUtil.doInitContextMenu(r,(e,t,r,o)=>{const i=+o.data("ctx-id");n.val(CreatureBuilder._AC_COMMON[Object.keys(CreatureBuilder._AC_COMMON)[i]]),a()},Object.keys(CreatureBuilder._AC_COMMON));const o=$(`<button class="btn btn-default btn-xs mr-2">Feature <span class="caret"></span></button>`).click(e=>ContextUtil.handleOpenContextMenu(e,o,r)),i=$(`<button class="btn btn-default btn-xs">Item</button>`).click(()=>{const e=new SearchWidget({Item:SearchWidget.CONTENT_INDICES.Item},(e,r,o)=>{const[i,d]=o.split(HASH_LIST_SEP);n.val(`{@item ${decodeURIComponent(i)}${d===UrlUtil.encodeForHash(SRC_DMG)?"":`|${decodeURIComponent(d)}`}}`),a(),t.data("close")()},{defaultCategory:"Item"}),t=UiUtil.getShow$Modal("Select Item",()=>e.$wrpSearch.detach());t.append(e.$wrpSearch),e.doFocus()}),d=$(`<button class="btn btn-xs btn-danger mkbru_mon__btn-rm-row--nested-1 ml-2" title="Remove AC Feature/Item"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{t.splice(t.indexOf(l),1),p.empty().remove(),ContextUtil.doTeardownContextMenu(r),a()}),p=$$`<div class="flex mb-2 mkbru_mon__wrp-rows--removable-nested-1">${n}${o}${i}${d}</div>`,l={$wrpFrom:p,getAcFrom:()=>n.val().trim()};return t.push(l),l}__$getHpInput(e){var t=Math.floor;const[a,n]=BuilderUi.getLabelledRowTuple("Hit Points",{isMarked:!0}),r=(()=>{if(null!=this._stateProxy.hp.special)return"2";else{const e=CreatureBuilder.__$getHpInput__getFormulaParts(this._stateProxy.hp.formula);return null==e?"1":"0"}})(),o=()=>{const e=c.val().trim(),t=+e,a=t?`${0<t?"+":""}${t}`:"";return`${s.val()}d${u.val()}${a}`},i=()=>{switch(d.val()){case"0":{this._stateProxy.hp={formula:o(),average:+f.val()};break}case"1":{this._stateProxy.hp={formula:h.val(),average:+v.val()};break}case"2":{this._stateProxy.hp={special:S.val()};break}}e()},d=$(`<select class="form-control input-xs mb-2">
			<option value="0">Simple Formula</option>
			<option value="1">Complex Formula</option>
			<option value="2">Custom</option>
		</select>`).appendTo(n).val(r).change(()=>{switch(d.val()){case"0":m.show(),x.hide(),P.hide();break;case"1":m.hide(),x.show(),P.hide();break;case"2":m.hide(),x.hide(),P.show();}i()}),p=()=>{if(this._metaProxy.autoCalc.hpModifier){const e=+s.val(),t=Parser.getAbilityModNumber(this._state.con);c.val(e*t),l(),i()}};this._addHook("state","con",p);const l=()=>{if(this._metaProxy.autoCalc.hpAverageSimple){const e=Renderer.dice.parseAverage(o());null!=e&&f.val(t(e))}},s=$(`<select class="form-control input-xs mr-2">${[...Array(50)].map((e,t)=>`<option>${t+1}</option>`)}</select>`).change(()=>{p(),i()}),u=$(`<select class="form-control input-xs mr-2">${Renderer.dice.DICE.map(e=>`<option>${e}</option>`)}</select>`).change(()=>{l(),i()}),c=$(`<input class="form-control form-control--minimal input-xs text-right mr-2" type="number">`).change(()=>{this._metaProxy.autoCalc.hpModifier&&(this._metaProxy.autoCalc.hpModifier=!1,g.removeClass("active")),l(),i()}),g=$(`<button class="btn btn-xs btn-default ${this._metaProxy.autoCalc.hpModifier?"active":""}" title="Auto-calculate modifier from Constitution"><span class="glyphicon glyphicon-refresh"/></button>`).click(()=>{this._metaProxy.autoCalc.hpModifier?(this._metaProxy.autoCalc.hpModifier=!1,this._saveTemp()):(this._metaProxy.autoCalc.hpModifier=!0,p()),g.toggleClass("active",this._metaProxy.autoCalc.hpModifier)}),f=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number">`).change(()=>{this._metaProxy.autoCalc.hpAverageSimple=!1,i()}),_=$(`<button class="btn btn-xs btn-default ${this._metaProxy.autoCalc.hpAverageSimple?"active":""}" title="Auto-calculate"><span class="glyphicon glyphicon-refresh"/></button>`).click(()=>{this._metaProxy.autoCalc.hpAverageSimple?(this._metaProxy.autoCalc.hpAverageSimple=!1,this._saveTemp()):(this._metaProxy.autoCalc.hpAverageSimple=!0,l()),_.toggleClass("active",this._metaProxy.autoCalc.hpAverageSimple)}),m=$$`<div class="flex-col">
		<div class="flex-v-center mb-2">
			<span class="mr-2 mkbru__sub-name--50">Formula</span>
			${s}
			<span class="mr-2">d</span>
			${u}
			<span class="mr-2">+</span>
			${c}
			${g}
		</div>
		<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--50">Average</span>${f}${_}</div>
		</div>`.toggle("0"===r).appendTo(n);if("0"===r){const e=CreatureBuilder.__$getHpInput__getFormulaParts(this._stateProxy.hp.formula);s.val(`${e.hdNum}`),u.val(`${e.hdFaces}`),null!=e.mod&&c.val(e.mod),f.val(this._stateProxy.hp.average)}const y=()=>{if(this._metaProxy.autoCalc.hpAverageComplex){const e=Renderer.dice.parseAverage(h.val());null!=e&&v.val(t(e))}},h=$(`<input class="form-control form-control--minimal input-xs text-right">`).change(()=>{y(),i()}),v=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number">`).change(()=>{this._metaProxy.autoCalc.hpAverageComplex=!1,i()}),T=$(`<button class="btn btn-xs btn-default ${this._metaProxy.autoCalc.hpAverageComplex?"active":""}" title="Auto-calculate from Formula"><span class="glyphicon glyphicon-refresh"/></button>`).click(()=>{this._metaProxy.autoCalc.hpAverageComplex?(this._metaProxy.autoCalc.hpAverageComplex=!1,this._saveTemp()):(this._metaProxy.autoCalc.hpAverageComplex=!0,y()),T.toggleClass("active",this._metaProxy.autoCalc.hpAverageComplex)}),x=$$`<div class="flex-col">
		<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--50">Formula</span>${h}</div>
		<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--50">Average</span>${v}${T}</div>
		</div>`.toggle("1"===r).appendTo(n);"1"===r&&(h.val(this._stateProxy.hp.formula),v.val(this._stateProxy.hp.average));const S=$(`<input class="form-control form-control--minimal input-xs mb-2">`).change(()=>i()),P=$$`<div>${S}</div>`.toggle("1"===r).appendTo(n);return"1"===r&&S.val(this._stateProxy.hp.special),a}static __$getHpInput__getFormulaParts(e){const t=/^(\d*)d(\d+)([-+]\d+)?$/.exec(e.replace(/\s+/g,""));if(!t)return null;const a=t[1]?+t[1]:1;if(0>=a||50<a)return null;const n=+t[2];if(!Renderer.dice.DICE.includes(n))return null;const r={hdNum:a,hdFaces:n};return t[3]&&(r.mod=+t[3]),r}__$getSpeedInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Speed",{isMarked:!0}),n=(t,a)=>{const n=()=>{const t=r.val().trim();if(!t)delete this._stateProxy.speed[a],"fly"===a&&delete this._stateProxy.speed.canHover;else{const e=+t,n=o.val().trim();this._stateProxy.speed[a]=n?{number:e,condition:n}:e,"fly"===a&&(this._stateProxy.speed.canHover=!!(n&&/(^|[^a-zA-Z])hover([^a-zA-Z]|$)/i.exec(n)))}e()},r=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number">`).change(()=>n()),o=$(`<input class="form-control form-control--minimal input-xs" placeholder="${"fly"===a?"(hover)/when...":"when..."}">`).change(()=>n()),i=this._stateProxy.speed[a];return null!=i&&(null==i.condition?r.val(i):(r.val(i.number),o.val(i.condition))),$$`<div class="flex-v-center mb-2">
			<span class="mr-2 mkbru__sub-name--33">${t}</span>
			<div class="flex-v-center">${r}<span class="mr-2">ft.</span>${o}</div>
			</div>`};return $$`<div class="flex-col">
		${n("Walk","walk")}
		${n("Burrow","burrow")}
		${n("Climb","climb")}
		${n("Fly","fly")}
		${n("Swim","swim")}
		</div>`.appendTo(a),t}__$getAbilityScoreInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Ability Scores",{isMarked:!0,isRow:!0}),n=(t,a)=>{const n=$(`<input class="form-control form-control--minimal input-xs" type="number">`).val(this._stateProxy[a]).change(()=>{this._stateProxy[a]=+n.val(),e()});return $$`<div class="flex-v-center mb-2 flex-col mr-1">
			<span class="mb-2 bold">${a.toUpperCase()}</span>
			${n}
			</div>`};return Parser.ABIL_ABVS.forEach(e=>n(Parser.attAbvToFull(e),e).appendTo(a)),t}__$getSaveInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Saving Throws",{isMarked:!0,isRow:!0}),n=(t,a)=>{const n=$(`<input class="form-control form-control--minimal input-xs mb-2" type="number">`).change(()=>{o.removeClass("active"),delete this._metaProxy.profSave[a],this.__$getSaveSkillInput__handleValChange(e,"save",n,a)}),r=()=>{const t=Parser.getAbilityModNumber(this._stateProxy[a])+this._getProfBonus();(this._stateProxy.save=this._stateProxy.save||{})[a]=0>t?`${t}`:`+${t}`,n.val(t),e()},o=$(`<button class="btn btn-xs btn-default" title="Is Proficient">Prof.</button>`).click(()=>{this._metaProxy.profSave[a]?(delete this._metaProxy.profSave[a],n.val(""),this.__$getSaveSkillInput__handleValChange(e,"save",n,a)):(this._metaProxy.profSave[a]=1,i()),o.toggleClass("active",1===this._metaProxy.profSave[a])});this._metaProxy.profSave[a]&&o.addClass("active"),(this._stateProxy.save||{})[a]&&n.val(`${this._stateProxy.save[a]}`.replace(/^\+/,""));const i=()=>{1===this._metaProxy.profSave[a]&&r()};return this._addHook("state",a,i),this._addHook("meta","profBonus",i),$$`<div class="flex-v-center flex-col mr-1 mb-2">
			<span class="mr-2 bold">${a.toUpperCase()}</span>
			${n}${o}
			</div>`};return Parser.ABIL_ABVS.forEach(e=>n(Parser.attAbvToFull(e),e).appendTo(a)),t}__$getSkillInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Skills",{isMarked:!0}),n=(t,a)=>{const n=Parser.skillToAbilityAbv(a),r=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number">`).change(()=>{this._metaProxy.profSkill[a]&&(d.removeClass("active"),p.removeClass("active")),delete this._metaProxy.profSkill[a],this.__$getSaveSkillInput__handleValChange(e,"skill",r,a)}),o=t=>{const o=Parser.getAbilityModNumber(this._stateProxy[n])+this._getProfBonus()*(2-!t),i={...(this._stateProxy.skill||{})};i[a]=0>o?`${o}`:`+${o}`,this._stateProxy.skill=i,r.val(o),e()},i=t=>{t?(2===this._metaProxy.profSkill[a]?(delete this._metaProxy.profSkill[a],r.val(""),this.__$getSaveSkillInput__handleValChange(e,"skill",r,a)):(this._metaProxy.profSkill[a]=2,l()),d.removeClass("active"),p.toggleClass("active",2===this._metaProxy.profSkill[a])):(1===this._metaProxy.profSkill[a]?(delete this._metaProxy.profSkill[a],r.val(""),this.__$getSaveSkillInput__handleValChange(e,"skill",r,a)):(this._metaProxy.profSkill[a]=1,l()),d.toggleClass("active",1===this._metaProxy.profSkill[a]),p.removeClass("active"))},d=$(`<button class="btn btn-xs btn-default" title="Is Proficient">Prof.</button>`).click(()=>i());1===this._metaProxy.profSkill[a]&&d.addClass("active");const p=$(`<button class="btn btn-xs btn-default ml-2" title="Has Expertise">Expert.</button>`).click(()=>i(!0));2===this._metaProxy.profSkill[a]&&p.addClass("active"),(this._stateProxy.skill||{})[a]&&r.val(`${this._stateProxy.skill[a]}`.replace(/^\+/,""));const l=()=>{1===this._metaProxy.profSkill[a]?o():2===this._metaProxy.profSkill[a]&&o(!0)};return this._addHook("state",n,l),this._addHook("meta","profBonus",l),$$`<div class="flex-v-center mb-2">
			<span class="mr-2 mkbru__sub-name--33">${t}</span>
			<div class="text-muted mkbru_mon__skill-attrib-label mr-2 help--subtle" title="This skill is affected by the creature's ${Parser.attAbvToFull(Parser.skillToAbilityAbv(a))} score">(${Parser.skillToAbilityAbv(a).toUpperCase()})</div>
			${r}${d}${p}
			</div>`};return Object.keys(Parser.SKILL_TO_ATB_ABV).sort(SortUtil.ascSort).forEach(e=>n(e.toTitleCase(),e).appendTo(a)),t}__$getSaveSkillInput__handleValChange(e,t,a,n){const r=a.val();if(r&&r.trim()){const e=+r,a={...this._stateProxy[t]}||{};a[n]=0>e?`${e}`:`+${e}`,this._stateProxy[t]=a}else if(this._stateProxy[t]){const e={...this._stateProxy[t]};delete e[n],0===Object.keys(e).length?delete this._stateProxy[t]:this._stateProxy[t]=e}e()}__$getPassivePerceptionInput(e){var t=Math.round;const[a,n]=BuilderUi.getLabelledRowTuple("Passive Perception"),r=()=>{if(this._metaProxy.autoCalc.passivePerception){const a=t((()=>this._stateProxy.skill&&this._stateProxy.skill.perception&&this._stateProxy.skill.perception.trim()?+this._stateProxy.skill.perception:Parser.getAbilityModNumber(this._stateProxy.wis))()+10);o.val(a),this._stateProxy.passive=a,e()}};this._addHook("state","wis",r),this._addHook("state","skill",r);const o=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number">`).change(()=>{this._metaProxy.autoCalc.passivePerception&&(i.removeClass("active"),this._metaProxy.autoCalc.passivePerception=!1),this._stateProxy.passive=t(+o.val()),e()}).val(this._stateProxy.passive||0),i=$(`<button class="btn btn-default btn-xs ${this._metaProxy.autoCalc.passivePerception?"active":""}" title="Auto-Calculate Passive Perception"><span class="glyphicon glyphicon-refresh"/></button>`).click(()=>{this._metaProxy.autoCalc.passivePerception?(delete this._metaProxy.autoCalc.passivePerception,this._saveTemp()):(this._metaProxy.autoCalc.passivePerception=!0,r()),i.toggleClass("active",this._metaProxy.autoCalc.passivePerception)});return $$`<div class="flex-v-center">${o}${i}</div>`.appendTo(n),a}__$getVulnerableInput(e){return this.__$getDefencesInput(e,"Damage Vulnerabilities","Vulnerability","vulnerable")}__$getResistInput(e){return this.__$getDefencesInput(e,"Damage Resistances","Resistance","resist")}__$getImmuneInput(e){return this.__$getDefencesInput(e,"Damage Immunities","Immunity","immune")}__$getCondImmuneInput(e){return this.__$getDefencesInput(e,"Condition Immunities","Immunity","conditionImmune")}__$getDefencesInput(e,t,a,n){const[r,o]=BuilderUi.getLabelledRowTuple(t,{isMarked:!0}),i=[],d=$(`<div/>`).appendTo(o),p=$(`<div/>`).appendTo(o),l=()=>{const t=i.map(e=>e.getState());t.length?1!==t.length||t[0].note||t[0].preNote?this._stateProxy[n]=t:this._stateProxy[n]=[...t[0][n]]:delete this._stateProxy[n],e()},s=e=>{const t=CreatureBuilder.__$getDefencesInput__getNodeGroup(a,n,i,l,0,e);i.push(t),t.$ele.appendTo(d)},u=$(`<button class="btn btn-xs btn-default mr-2">Add Group</button>`).appendTo(p).click(()=>s());return this._stateProxy[n]&&(this._stateProxy[n].some(e=>null==e[n])?s({[n]:this._stateProxy[n]}):this._stateProxy[n].forEach(e=>s(e))),r}static __$getDefencesInput__getNodeGroup(e,t,a,n,r,o){const i=[],d=(e,t=!0)=>{null==e||(i.push(e),i.sort((e,t)=>("group"===e.type||"special"===e.type)&&e.type===t.type?t.order-e.order:"group"===e.type&&"special"===t.type?1:"special"===e.type&&"group"===t.type?-1:"group"===e.type||"special"===e.type?1:"group"===t.type||"special"===t.type?-1:SortUtil.ascSort(e.type,t.type)||t.order-e.order).forEach(e=>{e.$ele.detach(),_.append(e.$ele)}),t&&n())},p=ContextUtil.getNextGenericMenuId(),l="conditionImmune"===t?Parser.CONDITIONS:Parser.DMG_TYPES;ContextUtil.doInitContextMenu(p,(t,a,r,o)=>{const p=+o.data("ctx-id"),s=(()=>{const t=e=>i.some(t=>t.type===e);if(p<l.length)return t(l[p])?null:CreatureBuilder.__$getDefencesInput__getNodeItem(e,i,n,l[p]);return p===l.length?t("special")?null:CreatureBuilder.__$getDefencesInput__getNodeItem(e,i,n,"special"):void 0})();d(s)},[...l.map(e=>e.toTitleCase()),null,"Special"]);const s=$(`<button class="btn btn-xs btn-default mr-2">Add ${e}</button>`).click(e=>ContextUtil.handleOpenContextMenu(e,s,p)),u=$(`<button class="btn btn-xs btn-default mr-2">Add Child Group</button>`).click(()=>d(CreatureBuilder.__$getDefencesInput__getNodeGroup(e,t,i,n,r+1))),c=$(`<input class="form-control input-xs form-control--minimal mr-2" placeholder="Pre- note">`).change(()=>n()),g=$(`<input class="form-control input-xs form-control--minimal mr-2" placeholder="Post- note">`).change(()=>n()),f=$(`<button class="btn btn-xs btn-danger mkbru_mon__btn-rm-row" title="Remove ${e} Group"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{a.splice(a.indexOf(h),1),y.remove(),n()}),_=$(`<div class="flex-col"/>`),m=$$`<div class="mb-2 flex-v-center">${s}${u}${c}${g}${f}</div>`,y=(()=>{const e=$$`<div class="flex-col ${r?"":"mkbru_mon__wrp-rows"}">${m}${_}</div>`;return r?$$`<div class="flex-v-center full-width"><div class="mkbru_mon__row-indent"/>${e}</div>`:e})();o&&(c.val(o.preNote||""),g.val(o.note||""),o[t].forEach(a=>{"string"==typeof a?d(CreatureBuilder.__$getDefencesInput__getNodeItem(e,i,n,a),!1):null==a.special?d(CreatureBuilder.__$getDefencesInput__getNodeGroup(e,t,i,n,r+1,a),!1):d(CreatureBuilder.__$getDefencesInput__getNodeItem(e,i,n,"special",a.special),!1)}));const h={getState:()=>{const e={[t]:i.map(e=>e.getState()).filter(Boolean)};return c.val().trim()&&(e.preNote=c.val().trim()),g.val().trim()&&(e.note=g.val().trim()),e},$ele:y,type:"group",order:CreatureBuilder._rowSortOrder++};return h}static __$getDefencesInput__getNodeItem(e,t,a,n,r){const o=$(`<button class="btn btn-xxs btn-danger" title="Remove ${e} Entry"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{t.splice(t.indexOf(p),1),i.remove(),a()}),{$ele:i,getState:d}=(()=>{switch(n){case"special":{const e=$(`<input class="form-control form-control--minimal input-xs mr-2">`).change(()=>a());return null!=r&&e.val(r),{$ele:$$`<div class="mb-2 split flex-v-center mkbru__wrp-btn-xxs">${e}${o}</div>`,getState:()=>{const t=e.val().trim();return t?{special:t}:null}}}default:return{$ele:$$`<div class="mb-2 split flex-v-center mkbru__wrp-btn-xxs"><span class="mr-2">&bull; ${n.uppercaseFirst()}</span>${o}</div>`,getState:()=>n};}})(),p={$ele:i,getState:d,type:n,order:CreatureBuilder._rowSortOrder++};return p}__$getSenseInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Senses"),n=()=>{const t=r.val().trim();t?this._stateProxy.senses=t.split(StrUtil.COMMA_SPACE_NOT_IN_PARENTHESES_REGEX):delete this._stateProxy.senses,e()},r=$(`<input class="form-control input-xs form-control--minimal mr-2">`).change(()=>n());this._stateProxy.senses&&this._stateProxy.senses.length&&r.val(this._stateProxy.senses.join(", "));const o=ContextUtil.getNextGenericMenuId(),i=["Blindsight","Darkvision","Tremorsense","Truesight"];ContextUtil.doInitContextMenu(o,async(e,t,a,o)=>{const d=+o.data("ctx-id"),p=i[d].toLowerCase(),l=await InputUiUtil.pGetUserNumber({min:0,int:!0,title:"Enter the Number of Feet"});if(null==l)return;const s=r.val().trim(),u=`${p} ${l} ft.`;r.val(s?`${s}, ${u}`:u),n()},i);const d=$(`<button class="btn btn-xs btn-default mr-2 mkbru_mon__btn-add-sense-language">Add Sense</button>`).click(e=>ContextUtil.handleOpenContextMenu(e,d,o)),p=BuilderUi.$getSplitCommasSortButton(r,n);return $$`<div class="flex-v-center">${r}${d}${p}</div>`.appendTo(a),t}__$getLanguageInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Languages"),n=()=>{const t=r.val().trim();t?this._stateProxy.languages=t.split(StrUtil.COMMA_SPACE_NOT_IN_PARENTHESES_REGEX):delete this._stateProxy.languages,e()},r=$(`<input class="form-control input-xs form-control--minimal mr-2">`).change(()=>n());this._stateProxy.languages&&this._stateProxy.languages.length&&r.val(this._stateProxy.languages.join(", "));const o=Object.entries(this._bestiaryMetaRaw.language).filter(([e,t])=>!CreatureBuilder._LANGUAGE_BLACKLIST.has(e)).map(([e,t])=>"Telepathy"===t?"telepathy":t),i=$(`<button class="btn btn-xs btn-default mr-2 mkbru_mon__btn-add-sense-language">Add Language</button>`).click(async()=>{const e=await InputUiUtil.pGetUserString({title:"Enter a Language",default:"Common",autocomplete:o});if(null!=e){const t=r.val().trim();r.val(t?`${t}, ${e}`:e),n()}}),d=BuilderUi.$getSplitCommasSortButton(r,n,{bottom:[/telepathy/i]});return $$`<div class="flex-v-center">${r}${i}${d}</div>`.appendTo(a),t}__$getCrInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Challenge Rating",{isMarked:!0}),n=this._stateProxy.cr.lair?"1":this._stateProxy.cr.coven?"2":"0",r=$(`<select class="form-control input-xs mb-2">
			<option value="0">Basic Challenge Rating</option>
			<option value="1">Has Lair Challenge Rating</option>
			<option value="2">Has Coven Challenge Rating</option>
		</select>`).val(n).change(()=>{switch(r.val()){case"0":{d.hide(),l.hide(),this._stateProxy.cr=o.val();break}case"1":{d.show(),l.hide(),this._stateProxy.cr={cr:o.val(),lair:i.val()};break}case"2":{d.hide(),l.show(),this._stateProxy.cr={cr:o.val(),coven:p.val()};break}}e()}).appendTo(a),o=$(`<select class="form-control input-xs mb-2">${Parser.CRS.map(e=>`<option>${e}</option>`).join("")}</select>`).val(this._stateProxy.cr.cr||this._stateProxy.cr).change(()=>{"0"===r.val()?this._stateProxy.cr=o.val():this._stateProxy.cr.cr=o.val(),e()});$$`<div>${o}</div>`.appendTo(a);const i=$(`<select class="form-control input-xs">${Parser.CRS.map(e=>`<option>${e}</option>`).join("")}</select>`).change(()=>{this._stateProxy.cr.lair=i.val(),e()}),d=$$`<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--33">While in lair</span>${i}</div>`.appendTo(a).toggle("1"===n);"1"===n&&i.val(this._stateProxy.cr.cr);const p=$(`<select class="form-control input-xs">${Parser.CRS.map(e=>`<option>${e}</option>`).join("")}</select>`).change(()=>{this._stateProxy.cr.coven=p.val(),e()}),l=$$`<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--33">While in coven</span>${p}</div>`.appendTo(a).toggle("2"===n);return"2"===n&&p.val(this._stateProxy.cr.cr),t}__$getProfBonusInput(e){var t=Math.round;const[a,n]=BuilderUi.getLabelledRowTuple("Proficiency Bonus"),r=()=>{if(this._metaProxy.autoCalc.proficiency){const t=Parser.crToPb(this._stateProxy.cr.cr||this._stateProxy.cr);o.val(t),this._metaProxy.profBonus=t,e()}};this._addHook("state","cr",r);const o=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" min="0">`).val(this._getProfBonus()).change(()=>{this._metaProxy.profBonus=t(+o.val()),this._metaProxy.autoCalc.proficiency=!1,e()}),i=$(`<button class="btn btn-xs btn-default ${this._metaProxy.autoCalc.proficiency?"active":""}" title="Auto-calculate from Challenge Rating (DMG p. 274)"><span class="glyphicon glyphicon-refresh"/></button>`).click(()=>{this._metaProxy.autoCalc.proficiency?(this._metaProxy.autoCalc.proficiency=!1,this._saveTemp()):(this._metaProxy.autoCalc.proficiency=!0,r()),i.toggleClass("active",this._metaProxy.autoCalc.proficiency)});return $$`<div class="flex-v-center">${o}${i}</div>`.appendTo(n),a}_getProfBonus(){return null==this._metaProxy.profBonus?Parser.crToPb(this._stateProxy.cr.cr||this._stateProxy.cr):this._metaProxy.profBonus||0}__$getSpellcastingInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Spellcasting",{isMarked:!0}),n=[],r=$(`<div/>`).appendTo(a),o=$(`<div/>`).appendTo(a),i=$(`<button class="btn btn-xs btn-default">Add Spellcasting Trait</button>`).appendTo(o).click(()=>{p(),d()}),d=()=>{if(!n.length)delete this._stateProxy.spellcasting;else{const e=n.map(e=>e.getState()).filter(Boolean);e.length?this._stateProxy.spellcasting=e:delete this._stateProxy.spellcasting}e()},p=e=>{const t=CreatureBuilder.__$getSpellcastingInput__getTraitRow(n,d,e);n.push(t),t.$ele.appendTo(r)};return this._stateProxy.spellcasting&&this._stateProxy.spellcasting.forEach(e=>p(e)),t}static __$getSpellcastingInput__getTraitRow(e,t,a){const n=()=>{const e={name:i.val().trim()};d.hasClass("active")&&(e.headerEntries=BuilderUi.getTextAsEntries(c.val())),e.headerEntries&&!e.headerEntries.length&&delete e.headerEntries,p.hasClass("active")&&(e.footerEntries=BuilderUi.getTextAsEntries(g.val())),e.footerEntries&&!e.footerEntries.length&&delete e.footerEntries;const t=(e,a,n)=>{const r=e[a];null==r?e[a]=n:"object"==typeof n&&(n instanceof Array?e[a]=r.concat(n):Object.entries(n).forEach(([e,a])=>t(r,e,a)))};if(r.forEach(a=>{const n=a.getState();null==n||Object.entries(n).forEach(([a,n])=>t(e,a,n))}),SpellcastingTraitConvert.mutSpellcastingAbility(e),e.headerEntries){const t=JSON.stringify(e.headerEntries);/can innately cast {@spell /i.test(t)?e.hidden=[/per day/i.test(t)?"daily":"will"]:delete e.hidden}else delete e.hidden;return Object.keys(e).some(e=>"name"!==e)?e:null},r=[],o=(e,a)=>{const n=CreatureBuilder.__$getSpellcastingInput__getSpellGenericRow(r,t,e,a);r.push(n),n.$ele.appendTo(_)},i=$(`<input class="form-control form-control--minimal input-xs mr-2" placeholder="Trait name">`).change(()=>t());i.val(a?a.name:"Spellcasting");const d=$(`<button class="btn btn-xs btn-default mr-2">Header</button>`).click(()=>{d.toggleClass("active"),c.toggle(d.hasClass("active")),t()}).toggleClass("active",!!(a&&a.headerEntries)),p=$(`<button class="btn btn-xs btn-default mr-2">Footer</button>`).click(()=>{p.toggleClass("active"),g.toggle(p.hasClass("active")),t()}).toggleClass("active",!!(a&&a.footerEntries)),l=ContextUtil.getNextGenericMenuId(),s=[{display:"Cantrips",type:"0",mode:"cantrip"},{display:"\uD835\uDC65th level spells",mode:"level"},null,{display:"Constant effects",type:"constant",mode:"basic"},{display:"At will spells",type:"will",mode:"basic"},{display:"\uD835\uDC65/day (/each) spells",type:"daily",mode:"frequency"},null,{display:"\uD835\uDC65/rest (/each) spells",type:"rest",mode:"frequency"},{display:"\uD835\uDC65/week (/each) spells",type:"week",mode:"frequency"}];ContextUtil.doInitContextMenu(l,async(e,a,n,i)=>{const d=+i.data("ctx-id"),p=s.filter(Boolean)[d];switch(p.type){case"constant":case"will":if(r.some(e=>e.type===p.type))return;}const l={mode:p.mode,type:p.type};if("level"===p.mode){const e=await InputUiUtil.pGetUserNumber({min:1,int:!0});if(null==e)return;l.level=e}switch(p.mode){case"cantrip":case"level":if(r.some(e=>e.type===l.level))return;}o(l),t()},s.map(e=>e?e.display:e));const u=$(`<button class="btn btn-xs btn-default">Add...</button>`).click(e=>ContextUtil.handleOpenContextMenu(e,u,l)),c=$(`<textarea class="form-control form-control--minimal mkbru__ipt-textarea mb-2" placeholder="Header text"/>`).toggle(!!(a&&a.headerEntries)).change(()=>t());a&&a.headerEntries&&c.val(BuilderUi.getEntriesAsText(a.headerEntries));const g=$(`<textarea class="form-control form-control--minimal mkbru__ipt-textarea mb-2" placeholder="Footer text"/>`).toggle(!!(a&&a.footerEntries)).change(()=>t());a&&a.footerEntries&&g.val(BuilderUi.getEntriesAsText(a.footerEntries));const f=$$`<div class="flex-v-center mb-2">${i}${d}${p}${u}</div>`,_=$$`<div class="flex-col"></div>`,m=$$`<div class="flex-col">${c}${_}${g}</div>`,y=$(`<button class="btn btn-xs btn-danger" title="Remove Trait"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{const a=n();a&&(delete a.name,(a.headerEntries||a.footerEntries||Object.keys(a).some(e=>"headerEntries"!==e&&"footerEntries"!==e))&&!confirm("Are you sure?"))||(e.splice(e.indexOf(v),1),h.empty().remove(),t())}),h=$$`<div class="flex-col mkbru_mon__wrp-rows">
		${f}
		${m}
		<div class="text-right mb-2">${y}</div>
		</div>`;if(a){const e=e=>Object.entries(a[e]).forEach(([t,a])=>o({mode:"frequency",type:e,each:t.endsWith("e"),count:+t[0]},a));a.constant&&o({mode:"basic",type:"constant"},a.constant),a.will&&o({mode:"basic",type:"will"},a.will),a.daily&&e("daily"),a.rest&&e("rest"),a.weekly&&e("weekly"),a.spells&&Object.entries(a.spells).forEach(([e,t])=>{const a=+e;"0"===e?o({mode:"cantrip",type:a},t.spells):o({mode:"level",type:a,lower:t.lower,slots:t.slots,level:a},t.spells)})}const v={$ele:h,getState:n};return v}static __$getSpellcastingInput__getSpellGenericRow(e,t,a,n){const r=(e,t,a)=>{for(let n=0;n<t.length-1;++n)e=e[t[n]]=e[t[n]]||{};e[t.last()]=a},o=[],i=$(`<div class="flex-col"/>`),d=$(`<button class="btn btn-xxs btn-default mr-2" title="Add Spell"><span class="glyphicon glyphicon-plus"/></button>`).click(async()=>{const e={};a.level&&(e.level=a.level),"cantrip"===a.mode&&(e.level=0),s.filterIgnoreLevel&&s.filterIgnoreLevel()&&delete e.level;const n=await BuilderUi.pGetUserSpellSearch(e);n&&(l(n),t())}),p=$(`<button class="btn btn-xxs btn-danger" title="Remove Spell Group"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{e.splice(e.indexOf(c),1),u.empty().remove(),t()}),l=e=>{const a=CreatureBuilder.__$getSpellcastingInput__getSpellGenericRow__getRowItem(o,t,e);o.push(a),o.forEach(e=>e._sortString=Renderer.stripTags(e.getState())),o.sort((e,t)=>SortUtil.ascSortLower(e._sortString,t._sortString)||t.order-e.order).forEach(e=>{e.$ele.detach(),i.append(e.$ele)})},s=(()=>{const e={};switch(a.mode){case"basic":{e.$ele=$$`<i>${"constant"===a.type?"Constant Effects":"At Will"}</i>`,e.getKeyPath=()=>[a.type];break}case"frequency":{const r=$(`<input class="form-control form-control--minimal input-xs mkbru_mon__spell-header-ipt" type="number" min="1" max="9">`).change(()=>t());n?r.val(a.count||1):r.val(1);const o=$(`<input class="mkbru__ipt-cb mkbru__ipt-cb--small-offset" type="checkbox">`).prop("checked",n&&a.each).change(()=>t()),i=(()=>{switch(a.type){case"daily":return"/Day";case"rest":return"/Rest";case"weekly":return"/Week";}})();e.$ele=$$`<div class="split mkbru_mon__spell-header-wrp mr-4">
					${r}
					<span class="mr-2 italic">${i}</span>
					<label class="flex-v-baseline text-muted small ml-auto"><span class="mr-1">(Each? </span>${o}<span>)</span></label>
					</div>`,e.getKeyPath=()=>[a.type,`${Math.max(Math.min(9,Math.round(+r.val())),1)}${o.prop("checked")?"e":""}`];break}case"cantrip":{e.$ele=$$`<i>Cantrips</i>`,e.getKeyPath=()=>["spells","0","spells"];break}case"level":{const n=$(`<input type="number" class="form-control form-control--minimal input-xs mkbru_mon__spell-header-ipt mr-2">`).val(a.slots||0).change(()=>t()),r=$(`<input type="checkbox" class="mkbru__ipt-cb">`).prop("checked",!!a.lower).change(()=>t());e.$ele=$$`<div class="split mkbru_mon__spell-header-wrp mr-4">
					<div class="italic">${Parser.spLevelToFull(a.level)}-level Spells</div>
					<div class="flex-v-center text-muted small ml-auto"><span>(</span>${n}<span class="mr-2">Slots</span></div>
					<div class="mkbru_mon__spell-header-divider mr-2"/>
					<label class="flex-v-center text-muted small"><span class="mr-1">Warlock?</span>${r}<span>)</span></label>
					</div>`,e.getKeyPath=()=>["spells",`${a.level}`,"spells"],e.getAdditionalData=()=>[{keyPath:["spells",`${a.level}`,"slots"],value:+n.val()},{keyPath:["spells",`${a.level}`,"lower"],value:r.prop("checked")?1:null}],e.filterIgnoreLevel=()=>r.prop("checked")}}return e})(),u=$$`<div class="flex-col">
		<div class="split flex-v-center mb-2">
			${s.$ele}
			<div class="flex-v-center mkbru__wrp-btn-xxs">${d}${p}</div>
		</div>
		${i}
		<div class="mkbru_mon__spell-divider mb-2"/>
		</div>`;n&&n.forEach(e=>l(e));const c={$ele:u,getState:()=>{const e=o.map(e=>e.getState());if(e.length){const t=s.getKeyPath(),a={};if(r(a,t,e),s.getAdditionalData){const e=s.getAdditionalData();e.filter(e=>null!=e.value).forEach(e=>r(a,e.keyPath,e.value))}return a}return null},type:a.type};return c}static __$getSpellcastingInput__getSpellGenericRow__getRowItem(e,t,a){const n=()=>`&bull; ${Renderer.get().render(a)}`,r=$(`<input class="form-control form-control--minimal input-xs mr-2">`).val(a).change(()=>{a=r.val(),i.html(n()),t()}).hide(),o=$(`<button class="btn btn-xxs btn-default mr-2" title="Toggle Edit Mode"><span class="glyphicon glyphicon-pencil"/></button>`).click(()=>{o.toggleClass("active"),r.toggle(o.hasClass("active")),i.toggle(!o.hasClass("active"))}),i=$(`<div class="mr-2">${n()}</div>`),d=$(`<button class="btn btn-xxs btn-danger" title="Remove Spell"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{e.splice(e.indexOf(s),1),p.empty().remove(),t()}),p=$$`<div class="split flex-v-center mb-2 mkbru_mon__spell-wrp-edit">
		${i}${r}
		<div class="flex-v-center mkbru__wrp-btn-xxs">${o}${d}</div>
		</div>`,l=()=>a,s={$ele:p,getState:l,order:CreatureBuilder._rowSortOrder++};return s}__$getTraitInput(e){return this.__$getGenericEntryInput(e,{name:"Traits",shortName:"Trait",prop:"trait",canReorder:!1,generators:[{name:"Add Predefined Trait",action:()=>{let e;return new Promise(t=>{const a=new SearchWidget({Trait:this._indexedTraits},async t=>{e=t,n.data("close")(!0)},{defaultCategory:"Trait",searchOptions:{fields:{n:{boost:5,expand:!0}},expand:!0},fnTransform:e=>e.id}),n=UiUtil.getShow$Modal("Select a Trait",n=>{if(a.$wrpSearch.detach(),!n)return t(null);const r=MiscUtil.copy(this._jsonCreature.trait[e]);r.entries=JSON.parse(JSON.stringify(r.entries).replace(/<\$name\$>/gi,this._stateProxy.name)),t(r)});n.append(a.$wrpSearch),a.doFocus()})}}]})}__$getActionInput(e){var t=Math.floor;return this.__$getGenericEntryInput(e,{name:"Actions",shortName:"Action",prop:"action",generators:[{name:"Generate Attack",action:()=>new Promise(e=>{const a=UiUtil.getShow$Modal({title:"Generate Attack",cbClose:t=>{if(this._generateAttackCache=N(),!t)return e(null);const a=A();return a?void e(a):e(null)},fullHeight:!0}),n=$(`<input class="form-control form-control--minimal input-xs mr-2" placeholder="Weapon">`),r=$(`<input type="checkbox" class="mkbru__ipt-cb--plain">`).change(()=>g.toggle(r.prop("checked"))).prop("checked",!0),o=$(`<input type="checkbox" class="mkbru__ipt-cb--plain">`).change(()=>v.toggle(o.prop("checked"))),i=$(`<input type="checkbox" class="mkbru__ipt-cb--plain">`),d=$(`<input type="checkbox" class="mkbru__ipt-cb--plain">`).change(()=>P.toggle(d.prop("checked"))),p=$(`<input type="checkbox" class="mkbru__ipt-cb--plain">`).change(()=>k.toggle(p.prop("checked"))),l=$(`<input class="form-control form-control--minimal input-xs" type="number" value="5">`),s=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Number of Dice" min="1" value="1">`),u=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Dice Type" value="6">`),c=$(`<input class="form-control form-control--minimal input-xs" placeholder="Melee Damage Type" autocomplete="off">`).typeahead({source:Parser.DMG_TYPES}),g=$$`<div class="flex-col"><hr class="hr-3">
								<div class="flex-v-center mb-2"><span class="mr-2 no-shrink">Melee Range (ft.)</span>${l}</div>
								<div class="flex-v-center mb-2">${s}<span class="mr-2">d</span>${u}${c}</div>
								</div>`,f=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number">`),_=$(`<input class="form-control form-control--minimal input-xs" type="number">`),m=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Number of Dice" min="1" value="1">`),y=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Dice Type" value="6">`),h=$(`<input class="form-control form-control--minimal input-xs" placeholder="Ranged Damage Type">`).typeahead({source:Parser.DMG_TYPES}),v=$$`<div class="flex-col"><hr class="hr-3">
								<div class="flex-v-center mb-2">
									<span class="mr-2 no-shrink">Short Range (ft.)</span>${f}
									<span class="mr-2 no-shrink">Long Range (ft.)</span>${_}
								</div>
								<div class="flex-v-center mb-2">${m}<span class="mr-2">d</span>${y}${h}</div>
								</div>`.hide(),T=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Number of Dice" min="1" value="1">`),x=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Dice Type" value="8">`),S=$(`<input class="form-control form-control--minimal input-xs" placeholder="Two-Handed Damage Type">`).typeahead({source:Parser.DMG_TYPES}),P=$$`<div class="flex-col"><hr class="hr-3">
								<div class="flex-v-center mb-2">${T}<span class="mr-2">d</span>${x}${S}</div>
								</div>`.hide(),w=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Number of Dice" min="1" value="1">`),C=$(`<input class="form-control form-control--minimal input-xs mr-2" type="number" placeholder="Dice Type" value="6">`),b=$(`<input class="form-control form-control--minimal input-xs" placeholder="Bonus Damage Type">`).typeahead({source:Parser.DMG_TYPES}),k=$$`<div class="flex-col"><hr class="hr-3">
								<div class="flex-v-center mb-2">${w}<span class="mr-2">d</span>${C}${b}</div>
								</div>`.hide(),I=$(`<button class="btn btn-sm btn-default">Add</button>`).click(()=>r.prop("checked")||o.prop("checked")?void a.data("close")(!0):JqueryUtil.doToast({type:"warning",content:"At least one of 'Melee' or 'Ranged' must be selected!"})),E=$(`<button class="btn btn-sm btn-danger">Reset</button>`).click(()=>{confirm("Are you sure?")&&M({iptName:"",cbMelee:!0,cbRanged:!1,cbFinesse:!1,cbVersatile:!1,cbBonusDamage:!1,iptMeleeRange:"5",iptMeleeDamDiceCount:"1",iptMeleeDamDiceNum:"6",iptMeleeDamType:"",iptRangedShort:"",iptRangedLong:"",iptRangedDamDiceCount:"1",iptRangedDamDiceNum:"6",iptRangedDamType:"",iptVersatileDamDiceCount:"1",iptVersatileDamDiceNum:"8",iptVersatileDamType:"",iptBonusDamDiceCount:"1",iptBonusDamDiceNum:"6",iptBonusDamType:""})}),A=()=>{const e=this._getProfBonus(),a=Parser.getAbilityModNumber(i.prop("checked")?this._stateProxy.dex:this._stateProxy.str),[g,v]=[!!r.prop("checked")&&"mw",!!o.prop("checked")&&"rw"],P=`{@atk ${[g?"mw":null,v?"rw":null].filter(Boolean).join(",")}}`,k=[g?`reach ${l.val().trim()||5} ft.`:null,v?(()=>{const e=f.val().trim(),t=_.val().trim();return e||t?e?t?`range ${e}/${t} ft.`:`range ${e}/${e} ft.`:`range ${t}/${t} ft.`:`unlimited range`})():null].filter(Boolean).join(" or "),I=(e,a)=>{const n=+e.val()||1,r=+a.val()||6;return`${t(n*((r+1)/2))} ({@damage ${n}d${r}})`},E=e=>e.val().trim()?` ${e.val().trim()}`:"",A=[r.prop("checked")?`${I(s,u)}${E(c)} damage${o.prop("checked")?` in melee`:""}`:null,o.prop("checked")?`${I(m,y)}${E(h)} damage${r.prop("checked")?` at range`:""}`:null,d.prop("checked")?`${I(T,x)}${E(S)} damage if used with both hands`:null].filter(Boolean).join(", or "),N=p.prop("checked")?`${A}, plus ${I(w,C)}${E(b)} damage`:A;return{name:n.val().trim()||"Unarmed Strike",entries:[`${P} ${`{@hit ${e+a}} to hit`}, ${k}, one target. {@h}${N}.`]}},N=()=>({iptName:n.val(),cbMelee:r.prop("checked"),cbRanged:o.prop("checked"),cbFinesse:i.prop("checked"),cbVersatile:d.prop("checked"),cbBonusDamage:p.prop("checked"),iptMeleeRange:l.val(),iptMeleeDamDiceCount:s.val(),iptMeleeDamDiceNum:u.val(),iptMeleeDamType:c.val(),iptRangedShort:f.val(),iptRangedLong:_.val(),iptRangedDamDiceCount:m.val(),iptRangedDamDiceNum:y.val(),iptRangedDamType:h.val(),iptVersatileDamDiceCount:T.val(),iptVersatileDamDiceNum:x.val(),iptVersatileDamType:S.val(),iptBonusDamDiceCount:w.val(),iptBonusDamDiceNum:C.val(),iptBonusDamType:b.val()}),M=e=>{n.val(e.iptName),r.prop("checked",e.cbMelee).change(),o.prop("checked",e.cbRanged).change(),i.prop("checked",e.cbFinesse).change(),d.prop("checked",e.cbVersatile).change(),p.prop("checked",e.cbBonusDamage).change(),l.val(e.iptMeleeRange),s.val(e.iptMeleeDamDiceCount),u.val(e.iptMeleeDamDiceNum),c.val(e.iptMeleeDamType),f.val(e.iptRangedShort),_.val(e.iptRangedLong),m.val(e.iptRangedDamDiceCount),y.val(e.iptRangedDamDiceNum),h.val(e.iptRangedDamType),T.val(e.iptVersatileDamDiceCount),x.val(e.iptVersatileDamDiceNum),S.val(e.iptVersatileDamType),w.val(e.iptBonusDamDiceCount),C.val(e.iptBonusDamDiceNum),b.val(e.iptBonusDamType)};this._generateAttackCache&&M(this._generateAttackCache),$$`<div class="flex-col">
								<div class="flex-v-center mb-2">
									${n}
									<label class="flex-v-center mr-2"><span class="mr-2">Melee</span>${r}</label>
									<label class="flex-v-center"><span class="mr-2">Ranged</span>${o}</label>
								</div>
								<div class="flex-v-center">
									<label class="flex-v-center mr-2"><span class="mr-2">Finesse</span>${i}</label>
									<label class="flex-v-center mr-2"><span class="mr-2">Versatile</span>${d}</label>
									<label class="flex-v-center"><span class="mr-2">Bonus Damage</span>${p}</label>
								</div>
								${g}
								${v}
								${P}
								${k}
								<div class="split flex-v-center mt-2">${I}${E}</div>
								</div>`.appendTo(a)})}]})}__$getReactionInput(e){return this.__$getGenericEntryInput(e,{name:"Reactions",shortName:"Reaction",prop:"reaction"})}__$getLegendaryActionInput(e){return this.__$getGenericEntryInput(e,{name:"Legendary Actions",shortName:"Legendary Action",prop:"legendary"})}__$getGenericEntryInput(e,t){null==t.canReorder&&(t.canReorder=!0);const[a,n]=BuilderUi.getLabelledRowTuple(t.name,{isMarked:!0}),r=()=>{const a=i.map(e=>e.getState()).filter(Boolean);a&&a.length?this._stateProxy[t.prop]=a:delete this._stateProxy[t.prop],e()},o=t.canReorder?()=>{i.forEach(e=>e.$ele.detach().appendTo(p)),r()}:null,i=[],d=$(`<div class="relative"/>`).appendTo(n),p=$(`<div/>`).appendTo(d),l={prop:t.prop,shortName:t.shortName,$wrpRowsOuter:d},s=$(`<div/>`).appendTo(n);return $(`<button class="btn btn-xs btn-default">Add ${t.shortName}</button>`).appendTo(s).click(()=>{this.__$getGenericEntryInput__getEntryRow(r,o,l,i).$ele.appendTo(p),r()}),t.generators&&t.generators.forEach(e=>{$(`<button class="btn btn-xs btn-default ml-2">${e.name}</button>`).appendTo(s).click(async()=>{const t=await e.action();null!=t&&(this.__$getGenericEntryInput__getEntryRow(r,o,l,i,t).$ele.appendTo(p),r())})}),this._stateProxy[t.prop]&&this._stateProxy[t.prop].forEach(e=>this.__$getGenericEntryInput__getEntryRow(r,o,l,i,e).$ele.appendTo(p)),a}__$getGenericEntryInput__getEntryRow(e,t,a,n,r){const o={},i=()=>{const e={name:d.val().trim(),entries:BuilderUi.getTextAsEntries(u.val())};if("variant"===a.prop&&(e.type="variant"),g){const t=g.getState();t&&(e.variantSource=t)}return e.name&&e.entries&&e.entries.length?(RechargeConvert.tryConvertRecharge(e),DiceConvert.convertTraitActionDice(e),e):null},d=$(`<input class="form-control form-control--minimal input-xs" placeholder="${a.shortName} name">`).change(()=>e());r&&r.name&&d.val(r.name.trim());const p=t?BuilderUi.$getUpButton(t,n,o):null,l=t?BuilderUi.$getDownButton(t,n,o):null,s=t?BuilderUi.$getDragPad(t,n,o,{cbSwap:e=>{const t={h:e.$iptEntries.css("height")};e.$iptEntries.css({height:o.$iptEntries.css("height")}),o.$iptEntries.css({height:t.h})},$wrpRowsOuter:a.$wrpRowsOuter}):null,u=$(`<textarea class="form-control form-control--minimal mkbru__ipt-textarea mb-2"/>`).change(()=>e());r&&r.entries&&u.val(BuilderUi.getEntriesAsText(r.entries));const c=$(`<button class="btn btn-xs btn-danger mb-2" title="Remove ${a.shortName}"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{const t=i();t&&t.entries&&!confirm("Are you sure?")||(n.splice(n.indexOf(o),1),f.empty().remove(),e())}),g="variant"===a.prop?(()=>{const t=$(`<select class="form-control input-xs"><option value="">(Same as creature)</option></select>`).change(()=>e());this._ui.allSources.forEach(e=>t.append(`<option value="${e.escapeQuotes()}">${Parser.sourceJsonToFull(e).escapeQuotes()}</option>`));const a=$(`<input type="number" class="form-control form-control--minimal input-xs" min="0">`).change(()=>e());r&&r.variantSource&&BrewUtil.hasSourceJson(r.variantSource.source)&&(t.val(r.variantSource),r.variantSource.page&&a.val(r.variantSource.page)),(this._$eles.$selVariantSources=this._$eles.$selVariantSources||[]).push(t);const n=$$`<div class="flex-col">
			<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--50">Source</span>${t}</div>
			<div class="flex-v-center mb-2"><span class="mr-2 mkbru__sub-name--50">Page</span>${a}</div>
			</div>`;return{$ele:n,getState:()=>{const e={source:t.val(),page:+a.val()};return e.source?(e.page||delete e.page,e):null}}})():null,f=$$`<div class="flex-col mkbru_mon__wrp-rows mkbru_mon__wrp-rows--removable">
		<div class="split flex-v-center mb-2">
			${d}
			<div class="flex-v-center">${p}${l}${s}</div>
		</div>
		${g?g.$ele:null}
		<div class="flex-v-center">${u}</div>
		<div class="text-right">${c}</div>
		</div>`;return o.$ele=f,o.getState=i,o.$iptEntries=u,n.push(o),o}__$getLegendaryGroupInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Legendary Group"),n=this._legendaryGroups.map(({name:e,source:t})=>({name:e,source:t})).sort((e,t)=>SortUtil.ascSortLower(e.name,t.name)||SortUtil.ascSortLower(e.source,t.source)),r=$(`<select class="form-control form-control--minimal input-xs"><option value="-1">None</option></select>`).change(()=>{const t=+r.val();~t?this._stateProxy.legendaryGroup=n[t]:delete this._stateProxy.legendaryGroup,e()}).appendTo(a);if(n.filter(e=>e.source).forEach((e,t)=>r.append(`<option value="${t}">${e.name}${e.source===SRC_MM?"":` [${Parser.sourceJsonToAbv(e.source)}]`}</option>`)),this._stateProxy.legendaryGroup){const e=n.findIndex(e=>e.name===this._stateProxy.legendaryGroup.name&&e.source===this._stateProxy.legendaryGroup.source);r.val(`${e}`)}return t}__$getVariantInput(e){return this.__$getGenericEntryInput(e,{name:"Variants",shortName:"Variant",prop:"variant"})}__$getTokenInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Token Image URL"),n=$(`<input class="form-control form-control--minimal input-xs mr-2">`).change(()=>o()).val(this._stateProxy.tokenUrl||""),r=$(`<button class="btn btn-xs btn-default mr-2" title="Preview Token"><span class="glyphicon glyphicon-fullscreen"/></button>`).click(e=>{const t=n.val().trim();return t?void Renderer.hover.doOpenWindow(e,r[0],{type:"image",href:{type:"external",url:t},data:{hoverTitle:`Token Preview`}}):JqueryUtil.doToast({content:"Please enter an image URL",type:"warning"})}),o=()=>{const t=n.val().trim();t?this._stateProxy.tokenUrl=t:delete this._stateProxy.tokenUrl,e()};return $$`<div class="flex">${n}${r}</div>`.appendTo(a),t}__$getFluffInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Flavour Info"),n=[],r=()=>{const t={},a=BuilderUi.getTextAsEntries(l.val());a&&a.length&&(t.entries=a);const r=n.map(e=>e.getState()).filter(Boolean);r.length&&(t.images=r),t.entries||t.images?this._stateProxy.fluff=t:delete this._stateProxy.fluff,e()},o=()=>{n.forEach(e=>e.$ele.detach().appendTo(d)),r()},i=$(`<div class="relative"/>`),d=$(`<div class="flex-col"/>`).appendTo(i),p={$wrpRowsOuter:i},l=$(`<textarea class="form-control form-control--minimal mkbru__ipt-textarea mb-2"/>`).change(()=>r()),s=$(`<button class="btn btn-xs btn-default">Add Image</button>`).click(async()=>{const e=await InputUiUtil.pGetUserString({title:"Enter a URL"});e&&(CreatureBuilder.__$getFluffInput__getImageRow(r,o,p,n,{href:{url:e}}).$ele.appendTo(d),r())});return $$`<div class="flex-col">
		${l}
		${i}
		<div>${s}</div>
		</div>`.appendTo(a),this._stateProxy.fluff&&(this._stateProxy.fluff.entries&&l.val(BuilderUi.getEntriesAsText(this._stateProxy.fluff.entries)),this._stateProxy.fluff.images&&this._stateProxy.fluff.images.forEach(e=>CreatureBuilder.__$getFluffInput__getImageRow(r,o,p,n,e).$ele.appendTo(d))),t}static __$getFluffInput__getImageRow(e,t,a,n,r){const o={},i=()=>{const e=d.val().trim();return e?{type:"image",href:{type:"external",url:e}}:null},d=$(`<input class="form-control form-control--minimal input-xs mr-2">`).change(()=>e());if(r){const e=(r||{}).href||{};e.url?d.val(e.url):e.path&&d.val(`${window.location.origin}${e.path}`)}const p=$(`<button class="btn btn-xs btn-default mr-2" title="Preview Image"><span class="glyphicon glyphicon-fullscreen"/></button>`).click(e=>{const t=i();if(!t)return JqueryUtil.doToast({content:"Please enter an image URL",type:"warning"});const a={shiftKey:!0,clientX:e.clientX};Renderer.hover.show({evt:a,ele:p[0],page:"hover",source:{data:{hoverTitle:"Image Preview"},entries:[t]},hash:"",isBookContent:!0})}),l=$(`<button class="btn btn-xs btn-danger" title="Remove Image"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{n.splice(n.indexOf(o),1),u.empty().remove(),e()}),s=BuilderUi.$getDragPad(t,n,o,{$wrpRowsOuter:a.$wrpRowsOuter}),u=$$`<div class="flex-v-center mb-2 mkbru_mon__wrp-rows--removable">${d}${p}${l}${s}</div>`;return o.$ele=u,o.getState=i,n.push(o),o}__$getEnvironmentInput(e){const[t,a]=BuilderUi.getLabelledRowTuple("Environment",{isMarked:!0}),n=()=>{const t=o.map(e=>!!e.$ipt.prop("checked")&&e.getVal()).filter(Boolean);t.length?this._stateProxy.environment=t:delete this._stateProxy.environment,e()},r=$(`<div class="flex-col full-width mr-2"/>`),o=[];Parser.ENVIRONMENTS.forEach(e=>{const t=$(`<input class="mkbru__ipt-cb mkbru_mon__cb-environment" type="checkbox">`).prop("checked",this._stateProxy.environment&&this._stateProxy.environment.includes(e)).change(()=>n());o.push({$ipt:t,getVal:()=>e}),$$`<label class="flex-v-center split stripe-odd--faint"><span>${StrUtil.toTitleCase(e)}</span>${t}</label>`.appendTo(r)});const i=(this._stateProxy.environment||[]).filter(e=>!Parser.ENVIRONMENTS.includes(e)).filter(e=>e&&e.trim());i.length&&i.forEach(e=>{CreatureBuilder.__$getEnvironmentInput__getCustomRow(n,o,e).$ele.appendTo(r)});const d=$(`<button class="btn btn-default btn-xs mt-2">Add Custom Environment</button>`).click(()=>{CreatureBuilder.__$getEnvironmentInput__getCustomRow(n,o).$ele.appendTo(r)});return $$`<div class="flex-col">
		${r}
		<div class="flex-v-center">${d}</div>
		</div>`.appendTo(a),t}static __$getEnvironmentInput__getCustomRow(e,t,a){const n=$(`<input class="form-control form-control--minimal input-xs">`).val(a?StrUtil.toTitleCase(a):"").change(()=>e()),r=$(`<input class="mkbru__ipt-cb hidden" type="checkbox">`).prop("checked",!0),o=$(`<button class="btn btn-danger btn-xxs"><span class="glyphicon glyphicon-trash"/></button>`).click(()=>{i.$ele.remove(),t.splice(t.indexOf(i),1),e()}),i={$ipt:r,getVal:()=>{const e=n.val().toLowerCase().trim();return e||!1},$ele:$$`<label class="flex-v-center split stripe-odd--faint mt-2"><span>${n}</span>${r}${o}</label>`};return t.push(i),i}renderOutput(){this._renderOutputDebounced(),this._mutSavedButtonText()}_renderOutput(){const e=this._ui.$wrpOutput.empty();this._resetTabs("output");const t=["Statblock","Info","Images"].map((e,t)=>this._getTab(t,e,{tabGroup:"output",stateObj:this._metaProxy,cbTabChange:this._saveTemp.bind(this)})),[a,n,r]=t;$$`<div class="flex-v-center full-width no-shrink">${t.map(e=>e.$btnTab)}</div>`.appendTo(e),t.forEach(t=>t.$wrpTab.appendTo(e));const o=$(`<table class="stats monster/">`).appendTo(a.$wrpTab);RenderBestiary.$getRenderedCreature(this._stateProxy,this._bestiaryMetaCache).appendTo(o);const i=$(`<table class="stats">`).appendTo(n.$wrpTab);Renderer.utils.buildFluffTab(!1,i,this._stateProxy,Renderer.monster.getFluff.bind(null,this._stateProxy,this._bestiaryMetaCache));const d=$(`<table class="stats">`).appendTo(r.$wrpTab);Renderer.utils.buildFluffTab(!0,d,this._stateProxy,Renderer.monster.getFluff.bind(null,this._stateProxy,this._bestiaryMetaCache))}}CreatureBuilder._ALIGNMENTS=[["U"],["A"],null,["L","G"],["N","G"],["C","G"],["L","N"],["N"],["C","N"],["L","E"],["N","E"],["C","E"],null,["G"],["L"],["C"],["E"],null,["L","G","NY","E"],["C","G","NY","E"],["L","NX","C","G"],["L","NX","C","E"],["NX","NY","N"],null,["NX","C","G","NY","E"],["L","NX","C","NY","G"],["L","NX","C","NY","E"],["NX","L","G","NY","E"]],CreatureBuilder._AC_COMMON={"Unarmored Defense":"unarmored defense","Natural Armor":"natural armor"},CreatureBuilder._LANGUAGE_BLACKLIST=new Set(["CS","X","XX"]),CreatureBuilder._rowSortOrder=0;const creatureBuilder=new CreatureBuilder;ui.creatureBuilder=creatureBuilder,creatureBuilder.ui=ui;